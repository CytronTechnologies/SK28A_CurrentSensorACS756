

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Aug 06 11:02:16 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  001960                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _incrementValue
    46  001960  0008               	dw	8
    47                           
    48                           	psect	idataBANK0
    49  001732                     __pidataBANK0:
    50                           	opt stack 0
    51                           
    52                           ;initializer for _firstLine1
    53  001732  4D                 	db	77
    54  001733  6F                 	db	111
    55  001734  64                 	db	100
    56  001735  65                 	db	101
    57  001736  20                 	db	32
    58  001737  3D                 	db	61
    59  001738  20                 	db	32
    60  001739  52                 	db	82
    61  00173A  65                 	db	101
    62  00173B  61                 	db	97
    63  00173C  6C                 	db	108
    64  00173D  20                 	db	32
    65  00173E  54                 	db	84
    66  00173F  69                 	db	105
    67  001740  6D                 	db	109
    68  001741  65                 	db	101
    69  001742  20                 	db	32
    70  001743  56                 	db	86
    71  001744  61                 	db	97
    72  001745  6C                 	db	108
    73  001746  75                 	db	117
    74  001747  65                 	db	101
    75  001748  20                 	db	32
    76  001749  20                 	db	32
    77  00174A  20                 	db	32
    78                           
    79                           ;initializer for _firstLine2
    80  00174B  4D                 	db	77
    81  00174C  6F                 	db	111
    82  00174D  64                 	db	100
    83  00174E  65                 	db	101
    84  00174F  20                 	db	32
    85  001750  3D                 	db	61
    86  001751  20                 	db	32
    87  001752  4D                 	db	77
    88  001753  61                 	db	97
    89  001754  78                 	db	120
    90  001755  69                 	db	105
    91  001756  6D                 	db	109
    92  001757  75                 	db	117
    93  001758  6D                 	db	109
    94  001759  20                 	db	32
    95  00175A  56                 	db	86
    96  00175B  61                 	db	97
    97  00175C  6C                 	db	108
    98  00175D  75                 	db	117
    99  00175E  65                 	db	101
   100  00175F  20                 	db	32
   101  001760  20                 	db	32
   102  001761  20                 	db	32
   103  001762  20                 	db	32
   104  001763  20                 	db	32
   105                           
   106                           ;initializer for _secondLine
   107  001764  50                 	db	80
   108  001765  72                 	db	114
   109  001766  65                 	db	101
   110  001767  73                 	db	115
   111  001768  73                 	db	115
   112  001769  20                 	db	32
   113  00176A  53                 	db	83
   114  00176B  57                 	db	87
   115  00176C  31                 	db	49
   116  00176D  20                 	db	32
   117  00176E  74                 	db	116
   118  00176F  6F                 	db	111
   119  001770  20                 	db	32
   120  001771  63                 	db	99
   121  001772  68                 	db	104
   122  001773  61                 	db	97
   123  001774  6E                 	db	110
   124  001775  67                 	db	103
   125  001776  65                 	db	101
   126  001777  20                 	db	32
   127  001778  4D                 	db	77
   128  001779  6F                 	db	111
   129  00177A  64                 	db	100
   130  00177B  65                 	db	101
   131  00177C  20                 	db	32
   132  0000                     _ADRESH	set	4036
   133  0000                     _ADRESL	set	4035
   134  0000                     _LATAbits	set	3977
   135  0000                     _LATB	set	3978
   136  0000                     _LATBbits	set	3978
   137  0000                     _LATCbits	set	3979
   138  0000                     _PORTA	set	3968
   139  0000                     _PORTB	set	3969
   140  0000                     _PORTBbits	set	3969
   141  0000                     _PORTC	set	3970
   142  0000                     _TRISA	set	3986
   143  0000                     _TRISB	set	3987
   144  0000                     _TRISC	set	3988
   145  0000                     _ADCS0	set	32256
   146  0000                     _ADCS1	set	32257
   147  0000                     _ADFM	set	32263
   148  0000                     _ADON	set	32272
   149  0000                     _CHS0	set	32274
   150  0000                     _CHS1	set	32275
   151  0000                     _CHS2	set	32276
   152  0000                     _CHS3	set	32277
   153  0000                     _CM0	set	32160
   154  0000                     _CM1	set	32161
   155  0000                     _CM2	set	32162
   156  0000                     _GODONE	set	32273
   157  0000                     _PCFG0	set	32264
   158  0000                     _PCFG1	set	32265
   159  0000                     _PCFG2	set	32266
   160  0000                     _PCFG3	set	32267
   161  0000                     _VCFG0	set	32268
   162  0000                     _VCFG1	set	32269
   163                           
   164                           	psect	smallconst
   165  000800                     __psmallconst:
   166                           	opt stack 0
   167  000800  00                 	db	0
   168  000801                     __stringdata:
   169                           	opt stack 0
   170  000801                     STR_3:
   171  000801  43                 	db	67	;'C'
   172  000802  74                 	db	116	;'t'
   173  000803  72                 	db	114	;'r'
   174  000804  3D                 	db	61	;'='
   175  000805  20                 	db	32
   176  000806  20                 	db	32
   177  000807  20                 	db	32
   178  000808  20                 	db	32
   179  000809  00                 	db	0
   180  00080A                     STR_1:
   181  00080A  20                 	db	32
   182  00080B  43                 	db	67	;'C'
   183  00080C  79                 	db	121	;'y'
   184  00080D  74                 	db	116	;'t'
   185  00080E  72                 	db	114	;'r'
   186  00080F  6F                 	db	111	;'o'
   187  000810  6E                 	db	110	;'n'
   188  000811  20                 	db	32
   189  000812  00                 	db	0
   190  000813                     STR_4:
   191  000813  50                 	db	80	;'P'
   192  000814  72                 	db	114	;'r'
   193  000815  65                 	db	101	;'e'
   194  000816  73                 	db	115	;'s'
   195  000817  73                 	db	115	;'s'
   196  000818  53                 	db	83	;'S'
   197  000819  57                 	db	87	;'W'
   198  00081A  31                 	db	49	;'1'
   199  00081B  00                 	db	0
   200  00081C                     STR_2:
   201  00081C  41                 	db	65	;'A'
   202  00081D  6D                 	db	109	;'m'
   203  00081E  70                 	db	112	;'p'
   204  00081F  4D                 	db	77	;'M'
   205  000820  65                 	db	101	;'e'
   206  000821  74                 	db	116	;'t'
   207  000822  65                 	db	101	;'e'
   208  000823  72                 	db	114	;'r'
   209  000824  00                 	db	0
   210  000825                     __end_of__stringdata:
   211                           	opt stack 0
   212                           
   213                           ; #config settings
   214  000825  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           	psect	cinit
   217  0016E4                     __pcinit:
   218                           	opt stack 0
   219  0016E4                     start_initialization:
   220                           	opt stack 0
   221  0016E4                     __initialization:
   222                           	opt stack 0
   223                           
   224                           ; Clear objects allocated to COMRAM (37 bytes)
   225  0016E4  EE00  F02B         	lfsr	0,__pbssCOMRAM
   226  0016E8  0E25               	movlw	37
   227  0016EA                     clear_0:
   228  0016EA  6AEE               	clrf	postinc0,c
   229  0016EC  06E8               	decf	wreg,f,c
   230  0016EE  E1FD               	bnz	clear_0
   231                           
   232                           ; Initialize objects allocated to BANK0 (75 bytes)
   233                           ; load TBLPTR registers with __pidataBANK0
   234  0016F0  0E32               	movlw	low __pidataBANK0
   235  0016F2  6EF6               	movwf	tblptrl,c
   236  0016F4  0E17               	movlw	high __pidataBANK0
   237  0016F6  6EF7               	movwf	tblptrh,c
   238  0016F8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   239  0016FA  6EF8               	movwf	tblptru,c
   240  0016FC  EE00  F060         	lfsr	0,__pdataBANK0
   241  001700  EE10 F04B          	lfsr	1,75
   242  001704                     copy_data0:
   243  001704  0009               	tblrd		*+
   244  001706  CFF5 FFEE          	movff	tablat,postinc0
   245  00170A  50E5               	movf	postdec1,w,c
   246  00170C  50E1               	movf	fsr1l,w,c
   247  00170E  E1FA               	bnz	copy_data0
   248                           
   249                           ; Initialize objects allocated to COMRAM (2 bytes)
   250                           ; load TBLPTR registers with __pidataCOMRAM
   251  001710  0E60               	movlw	low __pidataCOMRAM
   252  001712  6EF6               	movwf	tblptrl,c
   253  001714  0E19               	movlw	high __pidataCOMRAM
   254  001716  6EF7               	movwf	tblptrh,c
   255  001718  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   256  00171A  6EF8               	movwf	tblptru,c
   257  00171C  0009               	tblrd		*+	;fetch initializer
   258  00171E  CFF5 F050          	movff	tablat,__pdataCOMRAM
   259  001722  0009               	tblrd		*+	;fetch initializer
   260  001724  CFF5 F051          	movff	tablat,__pdataCOMRAM+1
   261  001728                     end_of_initialization:
   262                           	opt stack 0
   263  001728                     __end_of__initialization:
   264                           	opt stack 0
   265  001728  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266  00172A  6EF8               	movwf	tblptru,c
   267  00172C  0100               	movlb	0
   268  00172E  EF13  F004         	goto	_main	;jump to C main() function
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	bssCOMRAM
   279  00002B                     __pbssCOMRAM:
   280                           	opt stack 0
   281  00002B                     bcd@F4844:
   282                           	opt stack 0
   283  00002B                     	ds	10
   284  000035                     lcd_bcd@F4836:
   285                           	opt stack 0
   286  000035                     	ds	10
   287  00003F                     _value:
   288                           	opt stack 0
   289  00003F                     	ds	3
   290  000042                     _centerValue:
   291                           	opt stack 0
   292  000042                     	ds	2
   293  000044                     _counter:
   294                           	opt stack 0
   295  000044                     	ds	2
   296  000046                     _i:
   297                           	opt stack 0
   298  000046                     	ds	2
   299  000048                     _j:
   300                           	opt stack 0
   301  000048                     	ds	2
   302  00004A                     _maximum:
   303                           	opt stack 0
   304  00004A                     	ds	2
   305  00004C                     _selection:
   306                           	opt stack 0
   307  00004C                     	ds	1
   308  00004D                     _valueans:
   309                           	opt stack 0
   310  00004D                     	ds	3
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1l	equ	0xFE1
   319                           
   320                           	psect	dataCOMRAM
   321  000050                     __pdataCOMRAM:
   322                           	opt stack 0
   323  000050                     _incrementValue:
   324                           	opt stack 0
   325  000050                     	ds	2
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           wreg	equ	0xFE8
   332                           postdec1	equ	0xFE5
   333                           fsr1l	equ	0xFE1
   334                           
   335                           	psect	dataBANK0
   336  000060                     __pdataBANK0:
   337                           	opt stack 0
   338  000060                     _firstLine1:
   339                           	opt stack 0
   340  000060                     	ds	25
   341  000079                     _firstLine2:
   342                           	opt stack 0
   343  000079                     	ds	25
   344  000092                     _secondLine:
   345                           	opt stack 0
   346  000092                     	ds	25
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	cstackCOMRAM
   357  000001                     __pcstackCOMRAM:
   358                           	opt stack 0
   359  000001                     ?_adc_run:
   360                           	opt stack 0
   361  000001                     ?___lwdiv:
   362                           	opt stack 0
   363  000001                     ?___lwmod:
   364                           	opt stack 0
   365  000001                     ?___ftpack:
   366                           	opt stack 0
   367  000001                     ?___fttol:
   368                           	opt stack 0
   369  000001                     delay_us@uc_data:
   370                           	opt stack 0
   371  000001                     delay_ms@ui_data:
   372                           	opt stack 0
   373  000001                     ___lwdiv@dividend:
   374                           	opt stack 0
   375  000001                     ___lwmod@dividend:
   376                           	opt stack 0
   377  000001                     ___ftpack@arg:
   378                           	opt stack 0
   379  000001                     ___fttol@f1:
   380                           	opt stack 0
   381                           
   382                           ; 3 bytes @ 0x0
   383  000001                     	ds	1
   384  000002                     ??_lcd_4bit_write:
   385                           
   386                           ; 0 bytes @ 0x1
   387  000002                     	ds	1
   388  000003                     ??_delay_ms:
   389  000003                     ??_adc_run:
   390  000003                     lcd_4bit_write@data:
   391                           	opt stack 0
   392  000003                     ___lwdiv@divisor:
   393                           	opt stack 0
   394  000003                     ___lwmod@divisor:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x2
   398  000003                     	ds	1
   399  000004                     lcd_config@command:
   400                           	opt stack 0
   401  000004                     lcd_putchar@data:
   402                           	opt stack 0
   403  000004                     ___ftpack@exp:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x3
   407  000004                     	ds	1
   408  000005                     ??___fttol:
   409  000005                     lcd_goto@address:
   410                           	opt stack 0
   411  000005                     ___ftpack@sign:
   412                           	opt stack 0
   413  000005                     ___lwmod@counter:
   414                           	opt stack 0
   415  000005                     lcd_putstr@str:
   416                           	opt stack 0
   417  000005                     ___lwdiv@quotient:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x4
   421  000005                     	ds	1
   422  000006                     ??___ftpack:
   423                           
   424                           ; 0 bytes @ 0x5
   425  000006                     	ds	1
   426  000007                     ___lwdiv@counter:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x6
   430  000007                     	ds	2
   431  000009                     ?___ftmul:
   432                           	opt stack 0
   433  000009                     ?___awtoft:
   434                           	opt stack 0
   435  000009                     ___awtoft@c:
   436                           	opt stack 0
   437  000009                     ___ftmul@f1:
   438                           	opt stack 0
   439                           
   440                           ; 3 bytes @ 0x8
   441  000009                     	ds	1
   442  00000A                     ___fttol@sign1:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x9
   446  00000A                     	ds	1
   447  00000B                     ___fttol@lval:
   448                           	opt stack 0
   449                           
   450                           ; 4 bytes @ 0xA
   451  00000B                     	ds	1
   452  00000C                     ___awtoft@sign:
   453                           	opt stack 0
   454  00000C                     ___ftmul@f2:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0xB
   458  00000C                     	ds	1
   459  00000D                     ?___ftneg:
   460                           	opt stack 0
   461  00000D                     ___ftge@ff1:
   462                           	opt stack 0
   463  00000D                     ___ftneg@f1:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0xC
   467  00000D                     	ds	2
   468  00000F                     ??___ftmul:
   469  00000F                     ___fttol@exp1:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0xE
   473  00000F                     	ds	1
   474  000010                     ?___ftadd:
   475                           	opt stack 0
   476  000010                     lcd_bcd@ui_number:
   477                           	opt stack 0
   478  000010                     bcd@ui_number:
   479                           	opt stack 0
   480  000010                     ___ftadd@f1:
   481                           	opt stack 0
   482  000010                     ___ftge@ff2:
   483                           	opt stack 0
   484                           
   485                           ; 3 bytes @ 0xF
   486  000010                     	ds	2
   487  000012                     ??_lcd_bcd:
   488  000012                     ??_bcd:
   489  000012                     ___ftmul@exp:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x11
   493  000012                     	ds	1
   494  000013                     ??___ftge:
   495  000013                     ___ftadd@f2:
   496                           	opt stack 0
   497  000013                     ___ftmul@f3_as_product:
   498                           	opt stack 0
   499                           
   500                           ; 3 bytes @ 0x12
   501  000013                     	ds	3
   502  000016                     ??___ftadd:
   503  000016                     ___ftmul@cntr:
   504                           	opt stack 0
   505  000016                     bcd@value:
   506                           	opt stack 0
   507  000016                     lcd_bcd@ui_decimal:
   508                           	opt stack 0
   509                           
   510                           ; 10 bytes @ 0x15
   511  000016                     	ds	1
   512  000017                     ___ftmul@sign:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x16
   516  000017                     	ds	1
   517  000018                     ?___ftdiv:
   518                           	opt stack 0
   519  000018                     ___ftdiv@f1:
   520                           	opt stack 0
   521  000018                     bcd@ui_decimal:
   522                           	opt stack 0
   523                           
   524                           ; 10 bytes @ 0x17
   525  000018                     	ds	1
   526  000019                     ___ftadd@sign:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x18
   530  000019                     	ds	1
   531  00001A                     ___ftadd@exp2:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x19
   535  00001A                     	ds	1
   536  00001B                     ___ftadd@exp1:
   537                           	opt stack 0
   538  00001B                     ___ftdiv@f2:
   539                           	opt stack 0
   540                           
   541                           ; 3 bytes @ 0x1A
   542  00001B                     	ds	3
   543  00001E                     ??___ftdiv:
   544                           
   545                           ; 0 bytes @ 0x1D
   546  00001E                     	ds	2
   547  000020                     lcd_bcd@uc_digit:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x1F
   551  000020                     	ds	1
   552  000021                     ___ftdiv@cntr:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x20
   556  000021                     	ds	1
   557  000022                     bcd@uc_digit:
   558                           	opt stack 0
   559  000022                     ___ftdiv@f3:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x21
   563  000022                     	ds	3
   564  000025                     ___ftdiv@exp:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x24
   568  000025                     	ds	1
   569  000026                     ___ftdiv@sign:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x25
   573  000026                     	ds	1
   574  000027                     ??_main:
   575                           
   576                           ; 0 bytes @ 0x26
   577  000027                     	ds	4
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           postinc0	equ	0xFEE
   583                           wreg	equ	0xFE8
   584                           postdec1	equ	0xFE5
   585                           fsr1l	equ	0xFE1
   586                           
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 115 in file "CurretSense.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;		None               void
   599 ;; Registers used:
   600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   606 ;;      Params:         0       0       0       0       0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0
   608 ;;      Temps:          4       0       0       0       0       0       0       0       0
   609 ;;      Totals:         4       0       0       0       0       0       0       0       0
   610 ;;Total ram usage:        4 bytes
   611 ;; Hardware stack levels required when called:    6
   612 ;; This function calls:
   613 ;;		___awtoft
   614 ;;		___ftadd
   615 ;;		___ftdiv
   616 ;;		___ftge
   617 ;;		___ftmul
   618 ;;		___ftneg
   619 ;;		___fttol
   620 ;;		_adc_run
   621 ;;		_bcd
   622 ;;		_delay_ms
   623 ;;		_lcd_bcd
   624 ;;		_lcd_clear
   625 ;;		_lcd_goto
   626 ;;		_lcd_home
   627 ;;		_lcd_init
   628 ;;		_lcd_putchar
   629 ;;		_lcd_putstr
   630 ;; This function is called by:
   631 ;;		Startup code after reset
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text0
   636  000826                     __ptext0:
   637                           	opt stack 0
   638  000826                     _main:
   639                           	opt stack 25
   640                           
   641                           ;CurretSense.c: 118: PORTA = 0;
   642                           
   643                           ;incstack = 0
   644  000826  0E00               	movlw	0
   645  000828  6E80               	movwf	3968,c	;volatile
   646                           
   647                           ;CurretSense.c: 119: PORTB = 0;
   648  00082A  0E00               	movlw	0
   649  00082C  6E81               	movwf	3969,c	;volatile
   650                           
   651                           ;CurretSense.c: 120: PORTC = 0;
   652  00082E  0E00               	movlw	0
   653  000830  6E82               	movwf	3970,c	;volatile
   654                           
   655                           ;CurretSense.c: 121: TRISA = 0b00000001;
   656  000832  0E01               	movlw	1
   657  000834  6E92               	movwf	3986,c	;volatile
   658                           
   659                           ;CurretSense.c: 122: TRISB = 0b00000001;
   660  000836  0E01               	movlw	1
   661  000838  6E93               	movwf	3987,c	;volatile
   662                           
   663                           ;CurretSense.c: 123: TRISC = 0b00000000;
   664  00083A  0E00               	movlw	0
   665  00083C  6E94               	movwf	3988,c	;volatile
   666                           
   667                           ;CurretSense.c: 127: CM0 = 1;
   668  00083E  80B4               	bsf	4020,0,c	;volatile
   669                           
   670                           ;CurretSense.c: 128: CM1 = 1;
   671  000840  82B4               	bsf	4020,1,c	;volatile
   672                           
   673                           ;CurretSense.c: 129: CM2 = 1;
   674  000842  84B4               	bsf	4020,2,c	;volatile
   675                           
   676                           ;CurretSense.c: 133: VCFG1 = 0;
   677  000844  9AC1               	bcf	4033,5,c	;volatile
   678                           
   679                           ;CurretSense.c: 134: VCFG0 = 0;
   680  000846  98C1               	bcf	4033,4,c	;volatile
   681                           
   682                           ;CurretSense.c: 135: PCFG0 = 0;
   683  000848  90C1               	bcf	4033,0,c	;volatile
   684                           
   685                           ;CurretSense.c: 136: PCFG1 = 1;
   686  00084A  82C1               	bsf	4033,1,c	;volatile
   687                           
   688                           ;CurretSense.c: 137: PCFG2 = 1;
   689  00084C  84C1               	bsf	4033,2,c	;volatile
   690                           
   691                           ;CurretSense.c: 138: PCFG3 = 1;
   692  00084E  86C1               	bsf	4033,3,c	;volatile
   693                           
   694                           ;CurretSense.c: 139: CHS0 = 0;
   695  000850  94C2               	bcf	4034,2,c	;volatile
   696                           
   697                           ;CurretSense.c: 140: CHS1 = 0;
   698  000852  96C2               	bcf	4034,3,c	;volatile
   699                           
   700                           ;CurretSense.c: 141: CHS2 = 0;
   701  000854  98C2               	bcf	4034,4,c	;volatile
   702                           
   703                           ;CurretSense.c: 142: CHS3 = 0;
   704  000856  9AC2               	bcf	4034,5,c	;volatile
   705                           
   706                           ;CurretSense.c: 143: ADFM = 1;
   707  000858  8EC0               	bsf	4032,7,c	;volatile
   708                           
   709                           ;CurretSense.c: 144: ADCS0 = 1;
   710  00085A  80C0               	bsf	4032,0,c	;volatile
   711                           
   712                           ;CurretSense.c: 145: ADCS1 = 0;
   713  00085C  92C0               	bcf	4032,1,c	;volatile
   714                           
   715                           ;CurretSense.c: 146: ADCS0 = 1;
   716  00085E  80C0               	bsf	4032,0,c	;volatile
   717                           
   718                           ;CurretSense.c: 147: ADON = 1;
   719  000860  80C2               	bsf	4034,0,c	;volatile
   720                           
   721                           ;CurretSense.c: 150: lcd_init();
   722  000862  EC02  F00B         	call	_lcd_init	;wreg free
   723                           
   724                           ;CurretSense.c: 151: lcd_clear();
   725  000866  EC8D  F00C         	call	_lcd_clear	;wreg free
   726                           
   727                           ;CurretSense.c: 152: lcd_home();
   728  00086A  EC97  F00C         	call	_lcd_home	;wreg free
   729                           
   730                           ;CurretSense.c: 153: lcd_putstr(" Cytron ");
   731  00086E  0E08               	movlw	high STR_1
   732  000870  6E06               	movwf	lcd_putstr@str+1,c
   733  000872  0E0A               	movlw	low STR_1
   734  000874  6E05               	movwf	lcd_putstr@str,c
   735  000876  EC1B  F00C         	call	_lcd_putstr	;wreg free
   736                           
   737                           ;CurretSense.c: 154: delay_ms(1000);
   738  00087A  0E03               	movlw	3
   739  00087C  6E02               	movwf	delay_ms@ui_data+1,c
   740  00087E  0EE8               	movlw	232
   741  000880  6E01               	movwf	delay_ms@ui_data,c
   742  000882  EC43  F00C         	call	_delay_ms	;wreg free
   743                           
   744                           ;CurretSense.c: 155: lcd_goto(0x40);
   745  000886  0E40               	movlw	64
   746  000888  ECAA  F00C         	call	_lcd_goto
   747                           
   748                           ;CurretSense.c: 156: lcd_putstr("AmpMeter");
   749  00088C  0E08               	movlw	high STR_2
   750  00088E  6E06               	movwf	lcd_putstr@str+1,c
   751  000890  0E1C               	movlw	low STR_2
   752  000892  6E05               	movwf	lcd_putstr@str,c
   753  000894  EC1B  F00C         	call	_lcd_putstr	;wreg free
   754                           
   755                           ;CurretSense.c: 157: lcd_clear();
   756  000898  EC8D  F00C         	call	_lcd_clear	;wreg free
   757                           
   758                           ;CurretSense.c: 160: lcd_goto(0x00);
   759  00089C  0E00               	movlw	0
   760  00089E  ECAA  F00C         	call	_lcd_goto
   761                           
   762                           ;CurretSense.c: 161: lcd_putstr("Ctr=    ");
   763  0008A2  0E08               	movlw	high STR_3
   764  0008A4  6E06               	movwf	lcd_putstr@str+1,c
   765  0008A6  0E01               	movlw	low STR_3
   766  0008A8  6E05               	movwf	lcd_putstr@str,c
   767  0008AA  EC1B  F00C         	call	_lcd_putstr	;wreg free
   768                           
   769                           ;CurretSense.c: 162: lcd_goto(0x40);
   770  0008AE  0E40               	movlw	64
   771  0008B0  ECAA  F00C         	call	_lcd_goto
   772                           
   773                           ;CurretSense.c: 163: lcd_putstr("PressSW1");
   774  0008B4  0E08               	movlw	high STR_4
   775  0008B6  6E06               	movwf	lcd_putstr@str+1,c
   776  0008B8  0E13               	movlw	low STR_4
   777  0008BA  6E05               	movwf	lcd_putstr@str,c
   778  0008BC  EC1B  F00C         	call	_lcd_putstr	;wreg free
   779  0008C0                     l117:
   780                           
   781                           ;CurretSense.c: 165: {
   782                           ;CurretSense.c: 166: value = 0;
   783  0008C0  0E00               	movlw	0
   784  0008C2  6E3F               	movwf	_value,c
   785  0008C4  0E00               	movlw	0
   786  0008C6  6E40               	movwf	_value+1,c
   787  0008C8  0E00               	movlw	0
   788  0008CA  6E41               	movwf	_value+2,c
   789                           
   790                           ;CurretSense.c: 167: for(i = 0;i < 256;i++)
   791  0008CC  0E00               	movlw	0
   792  0008CE  6E47               	movwf	_i+1,c
   793  0008D0  0E00               	movlw	0
   794  0008D2  6E46               	movwf	_i,c
   795  0008D4  5047               	movf	_i+1,w,c
   796  0008D6  0A80               	xorlw	128
   797  0008D8  0F7F               	addlw	-129
   798  0008DA  0E00               	movlw	0
   799  0008DC  B4D8               	btfsc	status,2,c
   800  0008DE  5C46               	subwf	_i,w,c
   801  0008E0  B0D8               	btfsc	status,0,c
   802  0008E2  D01F               	goto	l2074
   803                           
   804                           ;CurretSense.c: 168: {
   805                           ;CurretSense.c: 169: value = value + (float)adc_run();
   806  0008E4  EC72  F00C         	call	_adc_run	;wreg free
   807  0008E8  C001  F009         	movff	?_adc_run,___awtoft@c
   808  0008EC  C002  F00A         	movff	?_adc_run+1,___awtoft@c+1
   809  0008F0  ECBF  F00B         	call	___awtoft	;wreg free
   810  0008F4  C009  F010         	movff	?___awtoft,___ftadd@f1
   811  0008F8  C00A  F011         	movff	?___awtoft+1,___ftadd@f1+1
   812  0008FC  C00B  F012         	movff	?___awtoft+2,___ftadd@f1+2
   813  000900  C03F  F013         	movff	_value,___ftadd@f2
   814  000904  C040  F014         	movff	_value+1,___ftadd@f2+1
   815  000908  C041  F015         	movff	_value+2,___ftadd@f2+2
   816  00090C  ECAD  F007         	call	___ftadd	;wreg free
   817  000910  C010  F03F         	movff	?___ftadd,_value
   818  000914  C011  F040         	movff	?___ftadd+1,_value+1
   819  000918  C012  F041         	movff	?___ftadd+2,_value+2
   820  00091C  4A46               	infsnz	_i,f,c
   821  00091E  2A47               	incf	_i+1,f,c
   822  000920  D7D9               	goto	L1
   823  000922                     l2074:
   824                           
   825                           ;CurretSense.c: 170: }
   826                           ;CurretSense.c: 171: value = value /256.0;
   827  000922  C03F  F018         	movff	_value,___ftdiv@f1
   828  000926  C040  F019         	movff	_value+1,___ftdiv@f1+1
   829  00092A  C041  F01A         	movff	_value+2,___ftdiv@f1+2
   830  00092E  0E00               	movlw	0
   831  000930  6E1B               	movwf	___ftdiv@f2,c
   832  000932  0E80               	movlw	128
   833  000934  6E1C               	movwf	___ftdiv@f2+1,c
   834  000936  0E43               	movlw	67
   835  000938  6E1D               	movwf	___ftdiv@f2+2,c
   836  00093A  EC91  F009         	call	___ftdiv	;wreg free
   837  00093E  C018  F03F         	movff	?___ftdiv,_value
   838  000942  C019  F040         	movff	?___ftdiv+1,_value+1
   839  000946  C01A  F041         	movff	?___ftdiv+2,_value+2
   840                           
   841                           ;CurretSense.c: 172: lcd_goto(0x05);
   842  00094A  0E05               	movlw	5
   843  00094C  ECAA  F00C         	call	_lcd_goto
   844                           
   845                           ;CurretSense.c: 173: lcd_bcd(3,value);
   846  000950  C03F  F001         	movff	_value,___fttol@f1
   847  000954  C040  F002         	movff	_value+1,___fttol@f1+1
   848  000958  C041  F003         	movff	_value+2,___fttol@f1+2
   849  00095C  ECFC  F009         	call	___fttol	;wreg free
   850  000960  C001  F027         	movff	?___fttol,??_main
   851  000964  C002  F028         	movff	?___fttol+1,??_main+1
   852  000968  C003  F029         	movff	?___fttol+2,??_main+2
   853  00096C  C004  F02A         	movff	?___fttol+3,??_main+3
   854  000970  C027  F010         	movff	??_main,lcd_bcd@ui_number
   855  000974  C028  F011         	movff	??_main+1,lcd_bcd@ui_number+1
   856  000978  0E03               	movlw	3
   857  00097A  EC83  F008         	call	_lcd_bcd
   858                           
   859                           ;CurretSense.c: 174: if(PORTBbits.RB0==0) break;
   860  00097E  B081               	btfsc	3969,0,c	;volatile
   861  000980  D79F               	goto	l117
   862                           
   863                           ;CurretSense.c: 175: }
   864                           ;CurretSense.c: 176: lcd_clear();
   865  000982  EC8D  F00C         	call	_lcd_clear	;wreg free
   866                           
   867                           ;CurretSense.c: 177: centerValue = value;
   868  000986  C03F  F001         	movff	_value,___fttol@f1
   869  00098A  C040  F002         	movff	_value+1,___fttol@f1+1
   870  00098E  C041  F003         	movff	_value+2,___fttol@f1+2
   871  000992  ECFC  F009         	call	___fttol	;wreg free
   872  000996  C001  F027         	movff	?___fttol,??_main
   873  00099A  C002  F028         	movff	?___fttol+1,??_main+1
   874  00099E  C003  F029         	movff	?___fttol+2,??_main+2
   875  0009A2  C004  F02A         	movff	?___fttol+3,??_main+3
   876  0009A6  C027  F042         	movff	??_main,_centerValue
   877  0009AA  C028  F043         	movff	??_main+1,_centerValue+1
   878                           
   879                           ;CurretSense.c: 178: delay_ms(500);
   880  0009AE  0E01               	movlw	1
   881  0009B0  6E02               	movwf	delay_ms@ui_data+1,c
   882  0009B2  0EF4               	movlw	244
   883  0009B4  6E01               	movwf	delay_ms@ui_data,c
   884  0009B6  EC43  F00C         	call	_delay_ms	;wreg free
   885  0009BA                     l2084:
   886                           
   887                           ;CurretSense.c: 182: {
   888                           ;CurretSense.c: 183: if(PORTBbits.RB0 == 0){
   889  0009BA  B081               	btfsc	3969,0,c	;volatile
   890  0009BC  D00E               	goto	l2098
   891  0009BE                     l125:
   892  0009BE  A081               	btfss	3969,0,c	;volatile
   893  0009C0  D7FE               	goto	l125
   894                           
   895                           ;CurretSense.c: 185: if(selection == 0){
   896  0009C2  664C               	tstfsz	_selection,c
   897  0009C4  D004               	goto	l2092
   898                           
   899                           ;CurretSense.c: 186: selection = 1;
   900  0009C6  0E01               	movlw	1
   901  0009C8  6E4C               	movwf	_selection,c
   902                           
   903                           ;CurretSense.c: 187: LATBbits.LATB1 = 1;}
   904  0009CA  828A               	bsf	3978,1,c	;volatile
   905  0009CC  D006               	goto	l2098
   906  0009CE                     l2092:
   907                           
   908                           ;CurretSense.c: 188: else if(selection == 1){
   909  0009CE  044C               	decf	_selection,w,c
   910  0009D0  A4D8               	btfss	status,2,c
   911  0009D2  D003               	goto	l2098
   912                           
   913                           ;CurretSense.c: 189: selection = 0;
   914  0009D4  0E00               	movlw	0
   915  0009D6  6E4C               	movwf	_selection,c
   916                           
   917                           ;CurretSense.c: 190: LATBbits.LATB1 = 0;}}
   918  0009D8  928A               	bcf	3978,1,c	;volatile
   919  0009DA                     l2098:
   920                           
   921                           ;CurretSense.c: 192: if(counter == 5){
   922  0009DA  5044               	movf	_counter,w,c
   923  0009DC  0A05               	xorlw	5
   924  0009DE  1045               	iorwf	_counter+1,w,c
   925  0009E0  A4D8               	btfss	status,2,c
   926  0009E2  D06E               	goto	l2134
   927                           
   928                           ;CurretSense.c: 193: counter = 0;
   929  0009E4  0E00               	movlw	0
   930  0009E6  6E45               	movwf	_counter+1,c
   931  0009E8  0E00               	movlw	0
   932  0009EA  6E44               	movwf	_counter,c
   933                           
   934                           ;CurretSense.c: 194: lcd_goto(0x00);
   935  0009EC  0E00               	movlw	0
   936  0009EE  ECAA  F00C         	call	_lcd_goto
   937                           
   938                           ;CurretSense.c: 195: for(i=incrementValue-8;i<incrementValue;i++){
   939  0009F2  0EF8               	movlw	248
   940  0009F4  2450               	addwf	_incrementValue,w,c
   941  0009F6  6E46               	movwf	_i,c
   942  0009F8  0EFF               	movlw	255
   943  0009FA  2051               	addwfc	_incrementValue+1,w,c
   944  0009FC  6E47               	movwf	_i+1,c
   945  0009FE  D01E               	goto	l2114
   946  000A00                     l133:
   947                           
   948                           ;CurretSense.c: 196: if(selection == 0) lcd_putchar(firstLine1[i]);
   949  000A00  664C               	tstfsz	_selection,c
   950  000A02  D00C               	goto	l2108
   951  000A04  0100               	movlb	0	; () banked
   952  000A06  0E60               	movlw	low _firstLine1
   953  000A08  2446               	addwf	_i,w,c
   954  000A0A  6ED9               	movwf	fsr2l,c
   955  000A0C  0100               	movlb	0	; () banked
   956  000A0E  0E00               	movlw	high _firstLine1
   957  000A10  2047               	addwfc	_i+1,w,c
   958  000A12  6EDA               	movwf	fsr2h,c
   959  000A14  50DF               	movf	indf2,w,c
   960  000A16  EC63  F00C         	call	_lcd_putchar
   961  000A1A  D00E               	goto	l2112
   962  000A1C                     l2108:
   963                           
   964                           ;CurretSense.c: 197: else if(selection == 1) lcd_putchar(firstLine2[i]);}
   965  000A1C  044C               	decf	_selection,w,c
   966  000A1E  A4D8               	btfss	status,2,c
   967  000A20  D00B               	goto	l2112
   968  000A22  0100               	movlb	0	; () banked
   969  000A24  0E79               	movlw	low _firstLine2
   970  000A26  2446               	addwf	_i,w,c
   971  000A28  6ED9               	movwf	fsr2l,c
   972  000A2A  0100               	movlb	0	; () banked
   973  000A2C  0E00               	movlw	high _firstLine2
   974  000A2E  2047               	addwfc	_i+1,w,c
   975  000A30  6EDA               	movwf	fsr2h,c
   976  000A32  50DF               	movf	indf2,w,c
   977  000A34  EC63  F00C         	call	_lcd_putchar
   978  000A38                     l2112:
   979  000A38  4A46               	infsnz	_i,f,c
   980  000A3A  2A47               	incf	_i+1,f,c
   981  000A3C                     l2114:
   982  000A3C  5047               	movf	_i+1,w,c
   983  000A3E  0A80               	xorlw	128
   984  000A40  6E27               	movwf	??_main& (0+255),c
   985  000A42  5050               	movf	_incrementValue,w,c
   986  000A44  5C46               	subwf	_i,w,c
   987  000A46  5051               	movf	_incrementValue+1,w,c
   988  000A48  0A80               	xorlw	128
   989  000A4A  5827               	subwfb	??_main& (0+255),w,c
   990  000A4C  A0D8               	btfss	status,0,c
   991  000A4E  D7D8               	goto	l133
   992                           
   993                           ;CurretSense.c: 198: lcd_goto(0x40);
   994  000A50  0E40               	movlw	64
   995  000A52  ECAA  F00C         	call	_lcd_goto
   996                           
   997                           ;CurretSense.c: 199: for(i=incrementValue-8;i<incrementValue;i++){
   998  000A56  0EF8               	movlw	248
   999  000A58  2450               	addwf	_incrementValue,w,c
  1000  000A5A  6E46               	movwf	_i,c
  1001  000A5C  0EFF               	movlw	255
  1002  000A5E  2051               	addwfc	_incrementValue+1,w,c
  1003  000A60  6E47               	movwf	_i+1,c
  1004  000A62  D00D               	goto	l2124
  1005  000A64                     l2120:
  1006                           
  1007                           ;CurretSense.c: 200: lcd_putchar(secondLine[i]);}
  1008  000A64  0100               	movlb	0	; () banked
  1009  000A66  0E92               	movlw	low _secondLine
  1010  000A68  2446               	addwf	_i,w,c
  1011  000A6A  6ED9               	movwf	fsr2l,c
  1012  000A6C  0100               	movlb	0	; () banked
  1013  000A6E  0E00               	movlw	high _secondLine
  1014  000A70  2047               	addwfc	_i+1,w,c
  1015  000A72  6EDA               	movwf	fsr2h,c
  1016  000A74  50DF               	movf	indf2,w,c
  1017  000A76  EC63  F00C         	call	_lcd_putchar
  1018  000A7A  4A46               	infsnz	_i,f,c
  1019  000A7C  2A47               	incf	_i+1,f,c
  1020  000A7E                     l2124:
  1021  000A7E  5047               	movf	_i+1,w,c
  1022  000A80  0A80               	xorlw	128
  1023  000A82  6E27               	movwf	??_main& (0+255),c
  1024  000A84  5050               	movf	_incrementValue,w,c
  1025  000A86  5C46               	subwf	_i,w,c
  1026  000A88  5051               	movf	_incrementValue+1,w,c
  1027  000A8A  0A80               	xorlw	128
  1028  000A8C  5827               	subwfb	??_main& (0+255),w,c
  1029  000A8E  A0D8               	btfss	status,0,c
  1030  000A90  D7E9               	goto	l2120
  1031                           
  1032                           ;CurretSense.c: 201: if(incrementValue < 25) incrementValue++;
  1033  000A92  5051               	movf	_incrementValue+1,w,c
  1034  000A94  0A80               	xorlw	128
  1035  000A96  6EF3               	movwf	prodl,c
  1036  000A98  0E80               	movlw	128
  1037  000A9A  5CF3               	subwf	prodl,w,c
  1038  000A9C  0E19               	movlw	25
  1039  000A9E  B4D8               	btfsc	status,2,c
  1040  000AA0  5C50               	subwf	_incrementValue,w,c
  1041  000AA2  B0D8               	btfsc	status,0,c
  1042  000AA4  D003               	goto	l2130
  1043  000AA6  4A50               	infsnz	_incrementValue,f,c
  1044  000AA8  2A51               	incf	_incrementValue+1,f,c
  1045  000AAA  D00C               	goto	l2136
  1046  000AAC                     l2130:
  1047                           
  1048                           ;CurretSense.c: 202: else if(incrementValue == 25) incrementValue = 8;}
  1049  000AAC  5050               	movf	_incrementValue,w,c
  1050  000AAE  0A19               	xorlw	25
  1051  000AB0  1051               	iorwf	_incrementValue+1,w,c
  1052  000AB2  A4D8               	btfss	status,2,c
  1053  000AB4  D007               	goto	l2136
  1054  000AB6  0E00               	movlw	0
  1055  000AB8  6E51               	movwf	_incrementValue+1,c
  1056  000ABA  0E08               	movlw	8
  1057  000ABC  6E50               	movwf	_incrementValue,c
  1058  000ABE  D002               	goto	l2136
  1059  000AC0                     l2134:
  1060                           
  1061                           ;CurretSense.c: 203: else counter++;
  1062  000AC0  4A44               	infsnz	_counter,f,c
  1063  000AC2  2A45               	incf	_counter+1,f,c
  1064  000AC4                     l2136:
  1065                           
  1066                           ;CurretSense.c: 205: value = 0;
  1067  000AC4  0E00               	movlw	0
  1068  000AC6  6E3F               	movwf	_value,c
  1069  000AC8  0E00               	movlw	0
  1070  000ACA  6E40               	movwf	_value+1,c
  1071  000ACC  0E00               	movlw	0
  1072  000ACE  6E41               	movwf	_value+2,c
  1073                           
  1074                           ;CurretSense.c: 206: for(i = 0;i < 256;i++)
  1075  000AD0  0E00               	movlw	0
  1076  000AD2  6E47               	movwf	_i+1,c
  1077  000AD4  0E00               	movlw	0
  1078  000AD6  6E46               	movwf	_i,c
  1079  000AD8  5047               	movf	_i+1,w,c
  1080  000ADA  0A80               	xorlw	128
  1081  000ADC  0F7F               	addlw	-129
  1082  000ADE  0E00               	movlw	0
  1083  000AE0  B4D8               	btfsc	status,2,c
  1084  000AE2  5C46               	subwf	_i,w,c
  1085  000AE4  B0D8               	btfsc	status,0,c
  1086  000AE6  D01F               	goto	l2150
  1087                           
  1088                           ;CurretSense.c: 207: {
  1089                           ;CurretSense.c: 208: value = value + (float)adc_run();
  1090  000AE8  EC72  F00C         	call	_adc_run	;wreg free
  1091  000AEC  C001  F009         	movff	?_adc_run,___awtoft@c
  1092  000AF0  C002  F00A         	movff	?_adc_run+1,___awtoft@c+1
  1093  000AF4  ECBF  F00B         	call	___awtoft	;wreg free
  1094  000AF8  C009  F010         	movff	?___awtoft,___ftadd@f1
  1095  000AFC  C00A  F011         	movff	?___awtoft+1,___ftadd@f1+1
  1096  000B00  C00B  F012         	movff	?___awtoft+2,___ftadd@f1+2
  1097  000B04  C03F  F013         	movff	_value,___ftadd@f2
  1098  000B08  C040  F014         	movff	_value+1,___ftadd@f2+1
  1099  000B0C  C041  F015         	movff	_value+2,___ftadd@f2+2
  1100  000B10  ECAD  F007         	call	___ftadd	;wreg free
  1101  000B14  C010  F03F         	movff	?___ftadd,_value
  1102  000B18  C011  F040         	movff	?___ftadd+1,_value+1
  1103  000B1C  C012  F041         	movff	?___ftadd+2,_value+2
  1104  000B20  4A46               	infsnz	_i,f,c
  1105  000B22  2A47               	incf	_i+1,f,c
  1106  000B24  D7D9               	goto	L2
  1107  000B26                     l2150:
  1108                           
  1109                           ;CurretSense.c: 209: }
  1110                           ;CurretSense.c: 210: value = value /256.0;
  1111  000B26  C03F  F018         	movff	_value,___ftdiv@f1
  1112  000B2A  C040  F019         	movff	_value+1,___ftdiv@f1+1
  1113  000B2E  C041  F01A         	movff	_value+2,___ftdiv@f1+2
  1114  000B32  0E00               	movlw	0
  1115  000B34  6E1B               	movwf	___ftdiv@f2,c
  1116  000B36  0E80               	movlw	128
  1117  000B38  6E1C               	movwf	___ftdiv@f2+1,c
  1118  000B3A  0E43               	movlw	67
  1119  000B3C  6E1D               	movwf	___ftdiv@f2+2,c
  1120  000B3E  EC91  F009         	call	___ftdiv	;wreg free
  1121  000B42  C018  F03F         	movff	?___ftdiv,_value
  1122  000B46  C019  F040         	movff	?___ftdiv+1,_value+1
  1123  000B4A  C01A  F041         	movff	?___ftdiv+2,_value+2
  1124                           
  1125                           ;CurretSense.c: 212: if(value > centerValue){
  1126  000B4E  C042  F009         	movff	_centerValue,___awtoft@c
  1127  000B52  C043  F00A         	movff	_centerValue+1,___awtoft@c+1
  1128  000B56  ECBF  F00B         	call	___awtoft	;wreg free
  1129  000B5A  C009  F00D         	movff	?___awtoft,___ftge@ff1
  1130  000B5E  C00A  F00E         	movff	?___awtoft+1,___ftge@ff1+1
  1131  000B62  C00B  F00F         	movff	?___awtoft+2,___ftge@ff1+2
  1132  000B66  C03F  F010         	movff	_value,___ftge@ff2
  1133  000B6A  C040  F011         	movff	_value+1,___ftge@ff2+1
  1134  000B6E  C041  F012         	movff	_value+2,___ftge@ff2+2
  1135  000B72  ECBA  F00A         	call	___ftge	;wreg free
  1136  000B76  B0D8               	btfsc	status,0,c
  1137  000B78  D03F               	goto	l2158
  1138                           
  1139                           ;CurretSense.c: 213: valueans = value-centerValue;
  1140  000B7A  C042  F009         	movff	_centerValue,___awtoft@c
  1141  000B7E  C043  F00A         	movff	_centerValue+1,___awtoft@c+1
  1142  000B82  ECBF  F00B         	call	___awtoft	;wreg free
  1143  000B86  C009  F00D         	movff	?___awtoft,___ftneg@f1
  1144  000B8A  C00A  F00E         	movff	?___awtoft+1,___ftneg@f1+1
  1145  000B8E  C00B  F00F         	movff	?___awtoft+2,___ftneg@f1+2
  1146  000B92  EC30  F00C         	call	___ftneg	;wreg free
  1147  000B96  C00D  F010         	movff	?___ftneg,___ftadd@f1
  1148  000B9A  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
  1149  000B9E  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
  1150  000BA2  C03F  F013         	movff	_value,___ftadd@f2
  1151  000BA6  C040  F014         	movff	_value+1,___ftadd@f2+1
  1152  000BAA  C041  F015         	movff	_value+2,___ftadd@f2+2
  1153  000BAE  ECAD  F007         	call	___ftadd	;wreg free
  1154  000BB2  C010  F04D         	movff	?___ftadd,_valueans
  1155  000BB6  C011  F04E         	movff	?___ftadd+1,_valueans+1
  1156  000BBA  C012  F04F         	movff	?___ftadd+2,_valueans+2
  1157                           
  1158                           ;CurretSense.c: 214: valueans = ((valueans * (5.04/1023.0)) / 0.04);}
  1159  000BBE  0E70               	movlw	112
  1160  000BC0  6E0C               	movwf	___ftmul@f2,c
  1161  000BC2  0EA1               	movlw	161
  1162  000BC4  6E0D               	movwf	___ftmul@f2+1,c
  1163  000BC6  0E3B               	movlw	59
  1164  000BC8  6E0E               	movwf	___ftmul@f2+2,c
  1165  000BCA  C04D  F009         	movff	_valueans,___ftmul@f1
  1166  000BCE  C04E  F00A         	movff	_valueans+1,___ftmul@f1+1
  1167  000BD2  C04F  F00B         	movff	_valueans+2,___ftmul@f1+2
  1168  000BD6  EC1F  F009         	call	___ftmul	;wreg free
  1169  000BDA  C009  F018         	movff	?___ftmul,___ftdiv@f1
  1170  000BDE  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
  1171  000BE2  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
  1172  000BE6  0ED7               	movlw	215
  1173  000BE8  6E1B               	movwf	___ftdiv@f2,c
  1174  000BEA  0E23               	movlw	35
  1175  000BEC  6E1C               	movwf	___ftdiv@f2+1,c
  1176  000BEE  0E3D               	movlw	61
  1177  000BF0  6E1D               	movwf	___ftdiv@f2+2,c
  1178  000BF2  EC91  F009         	call	___ftdiv	;wreg free
  1179  000BF6  D054               	goto	L3
  1180  000BF8                     l2158:
  1181                           
  1182                           ;CurretSense.c: 215: else if(value < centerValue){
  1183  000BF8  C03F  F00D         	movff	_value,___ftge@ff1
  1184  000BFC  C040  F00E         	movff	_value+1,___ftge@ff1+1
  1185  000C00  C041  F00F         	movff	_value+2,___ftge@ff1+2
  1186  000C04  C042  F009         	movff	_centerValue,___awtoft@c
  1187  000C08  C043  F00A         	movff	_centerValue+1,___awtoft@c+1
  1188  000C0C  ECBF  F00B         	call	___awtoft	;wreg free
  1189  000C10  C009  F010         	movff	?___awtoft,___ftge@ff2
  1190  000C14  C00A  F011         	movff	?___awtoft+1,___ftge@ff2+1
  1191  000C18  C00B  F012         	movff	?___awtoft+2,___ftge@ff2+2
  1192  000C1C  ECBA  F00A         	call	___ftge	;wreg free
  1193  000C20  B0D8               	btfsc	status,0,c
  1194  000C22  D045               	goto	l2164
  1195                           
  1196                           ;CurretSense.c: 216: valueans = centerValue-value;
  1197  000C24  C042  F009         	movff	_centerValue,___awtoft@c
  1198  000C28  C043  F00A         	movff	_centerValue+1,___awtoft@c+1
  1199  000C2C  ECBF  F00B         	call	___awtoft	;wreg free
  1200  000C30  C009  F010         	movff	?___awtoft,___ftadd@f1
  1201  000C34  C00A  F011         	movff	?___awtoft+1,___ftadd@f1+1
  1202  000C38  C00B  F012         	movff	?___awtoft+2,___ftadd@f1+2
  1203  000C3C  C03F  F00D         	movff	_value,___ftneg@f1
  1204  000C40  C040  F00E         	movff	_value+1,___ftneg@f1+1
  1205  000C44  C041  F00F         	movff	_value+2,___ftneg@f1+2
  1206  000C48  EC30  F00C         	call	___ftneg	;wreg free
  1207  000C4C  C00D  F013         	movff	?___ftneg,___ftadd@f2
  1208  000C50  C00E  F014         	movff	?___ftneg+1,___ftadd@f2+1
  1209  000C54  C00F  F015         	movff	?___ftneg+2,___ftadd@f2+2
  1210  000C58  ECAD  F007         	call	___ftadd	;wreg free
  1211  000C5C  C010  F04D         	movff	?___ftadd,_valueans
  1212  000C60  C011  F04E         	movff	?___ftadd+1,_valueans+1
  1213  000C64  C012  F04F         	movff	?___ftadd+2,_valueans+2
  1214                           
  1215                           ;CurretSense.c: 217: valueans = ((valueans * (5.04/1023.0)) / 0.04);}
  1216  000C68  0E70               	movlw	112
  1217  000C6A  6E0C               	movwf	___ftmul@f2,c
  1218  000C6C  0EA1               	movlw	161
  1219  000C6E  6E0D               	movwf	___ftmul@f2+1,c
  1220  000C70  0E3B               	movlw	59
  1221  000C72  6E0E               	movwf	___ftmul@f2+2,c
  1222  000C74  C04D  F009         	movff	_valueans,___ftmul@f1
  1223  000C78  C04E  F00A         	movff	_valueans+1,___ftmul@f1+1
  1224  000C7C  C04F  F00B         	movff	_valueans+2,___ftmul@f1+2
  1225  000C80  EC1F  F009         	call	___ftmul	;wreg free
  1226  000C84  C009  F018         	movff	?___ftmul,___ftdiv@f1
  1227  000C88  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
  1228  000C8C  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
  1229  000C90  0ED7               	movlw	215
  1230  000C92  6E1B               	movwf	___ftdiv@f2,c
  1231  000C94  0E23               	movlw	35
  1232  000C96  6E1C               	movwf	___ftdiv@f2+1,c
  1233  000C98  0E3D               	movlw	61
  1234  000C9A  6E1D               	movwf	___ftdiv@f2+2,c
  1235  000C9C  EC91  F009         	call	___ftdiv	;wreg free
  1236  000CA0                     L3:
  1237  000CA0  C018  F04D         	movff	?___ftdiv,_valueans
  1238  000CA4  C019  F04E         	movff	?___ftdiv+1,_valueans+1
  1239  000CA8  C01A  F04F         	movff	?___ftdiv+2,_valueans+2
  1240  000CAC  D006               	goto	l2166
  1241  000CAE                     l2164:
  1242                           
  1243                           ;CurretSense.c: 218: else valueans = 0;
  1244  000CAE  0E00               	movlw	0
  1245  000CB0  6E4D               	movwf	_valueans,c
  1246  000CB2  0E00               	movlw	0
  1247  000CB4  6E4E               	movwf	_valueans+1,c
  1248  000CB6  0E00               	movlw	0
  1249  000CB8  6E4F               	movwf	_valueans+2,c
  1250  000CBA                     l2166:
  1251                           
  1252                           ;CurretSense.c: 220: if(valueans > maximum) maximum = valueans;
  1253  000CBA  C04A  F009         	movff	_maximum,___awtoft@c
  1254  000CBE  C04B  F00A         	movff	_maximum+1,___awtoft@c+1
  1255  000CC2  ECBF  F00B         	call	___awtoft	;wreg free
  1256  000CC6  C009  F00D         	movff	?___awtoft,___ftge@ff1
  1257  000CCA  C00A  F00E         	movff	?___awtoft+1,___ftge@ff1+1
  1258  000CCE  C00B  F00F         	movff	?___awtoft+2,___ftge@ff1+2
  1259  000CD2  C04D  F010         	movff	_valueans,___ftge@ff2
  1260  000CD6  C04E  F011         	movff	_valueans+1,___ftge@ff2+1
  1261  000CDA  C04F  F012         	movff	_valueans+2,___ftge@ff2+2
  1262  000CDE  ECBA  F00A         	call	___ftge	;wreg free
  1263  000CE2  B0D8               	btfsc	status,0,c
  1264  000CE4  D014               	goto	l2170
  1265  000CE6  C04D  F001         	movff	_valueans,___fttol@f1
  1266  000CEA  C04E  F002         	movff	_valueans+1,___fttol@f1+1
  1267  000CEE  C04F  F003         	movff	_valueans+2,___fttol@f1+2
  1268  000CF2  ECFC  F009         	call	___fttol	;wreg free
  1269  000CF6  C001  F027         	movff	?___fttol,??_main
  1270  000CFA  C002  F028         	movff	?___fttol+1,??_main+1
  1271  000CFE  C003  F029         	movff	?___fttol+2,??_main+2
  1272  000D02  C004  F02A         	movff	?___fttol+3,??_main+3
  1273  000D06  C027  F04A         	movff	??_main,_maximum
  1274  000D0A  C028  F04B         	movff	??_main+1,_maximum+1
  1275  000D0E                     l2170:
  1276                           
  1277                           ;CurretSense.c: 222: if(selection == 0) bcd(3,valueans);
  1278  000D0E  664C               	tstfsz	_selection,c
  1279  000D10  D018               	goto	l2174
  1280  000D12  C04D  F001         	movff	_valueans,___fttol@f1
  1281  000D16  C04E  F002         	movff	_valueans+1,___fttol@f1+1
  1282  000D1A  C04F  F003         	movff	_valueans+2,___fttol@f1+2
  1283  000D1E  ECFC  F009         	call	___fttol	;wreg free
  1284  000D22  C001  F027         	movff	?___fttol,??_main
  1285  000D26  C002  F028         	movff	?___fttol+1,??_main+1
  1286  000D2A  C003  F029         	movff	?___fttol+2,??_main+2
  1287  000D2E  C004  F02A         	movff	?___fttol+3,??_main+3
  1288  000D32  C027  F010         	movff	??_main,bcd@ui_number
  1289  000D36  C028  F011         	movff	??_main+1,bcd@ui_number+1
  1290  000D3A  0E03               	movlw	3
  1291  000D3C  ECB2  F006         	call	_bcd
  1292  000D40  D00A               	goto	l2178
  1293  000D42                     l2174:
  1294                           
  1295                           ;CurretSense.c: 223: else if(selection == 1) bcd(3,maximum);
  1296  000D42  044C               	decf	_selection,w,c
  1297  000D44  A4D8               	btfss	status,2,c
  1298  000D46  D007               	goto	l2178
  1299  000D48  C04A  F010         	movff	_maximum,bcd@ui_number
  1300  000D4C  C04B  F011         	movff	_maximum+1,bcd@ui_number+1
  1301  000D50  0E03               	movlw	3
  1302  000D52  ECB2  F006         	call	_bcd
  1303  000D56                     l2178:
  1304                           
  1305                           ;CurretSense.c: 225: delay_ms(100);
  1306  000D56  0E00               	movlw	0
  1307  000D58  6E02               	movwf	delay_ms@ui_data+1,c
  1308  000D5A  0E64               	movlw	100
  1309  000D5C  6E01               	movwf	delay_ms@ui_data,c
  1310  000D5E  EC43  F00C         	call	_delay_ms	;wreg free
  1311  000D62  D62B               	goto	l2084
  1312  000D64                     __end_of_main:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           prodl	equ	0xFF3
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           postdec1	equ	0xFE5
  1322                           fsr1l	equ	0xFE1
  1323                           indf2	equ	0xFDF
  1324                           fsr2h	equ	0xFDA
  1325                           fsr2l	equ	0xFD9
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _lcd_putstr *****************
  1329 ;; Defined at:
  1330 ;;		line 306 in file "CurretSense.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  str             2    4[COMRAM] PTR unsigned char 
  1333 ;;		 -> STR_4(9), STR_3(9), STR_2(9), STR_1(9), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;		None               void
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1345 ;;      Params:         2       0       0       0       0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1348 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1349 ;;Total ram usage:        2 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    4
  1352 ;; This function calls:
  1353 ;;		_lcd_putchar
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text1
  1360  001836                     __ptext1:
  1361                           	opt stack 0
  1362  001836                     _lcd_putstr:
  1363                           	opt stack 26
  1364                           
  1365                           ;CurretSense.c: 308: while(*str != '\0')
  1366                           
  1367                           ;incstack = 0
  1368  001836  D00A               	goto	l1662
  1369  001838                     l1658:
  1370                           
  1371                           ;CurretSense.c: 309: {
  1372                           ;CurretSense.c: 310: lcd_putchar(*str++);
  1373  001838  C005  FFF6         	movff	lcd_putstr@str,tblptrl
  1374  00183C  C006  FFF7         	movff	lcd_putstr@str+1,tblptrh
  1375  001840                     	if	0	;tblptru may be non-zero
  1376  001840                     	endif
  1377  001840                     	if	0	;tblptru may be non-zero
  1378  001840                     	endif
  1379  001840  0008               	tblrd		*
  1380  001842  50F5               	movf	tablat,w,c
  1381  001844  EC63  F00C         	call	_lcd_putchar
  1382  001848  4A05               	infsnz	lcd_putstr@str,f,c
  1383  00184A  2A06               	incf	lcd_putstr@str+1,f,c
  1384  00184C                     l1662:
  1385  00184C  C005  FFF6         	movff	lcd_putstr@str,tblptrl
  1386  001850  C006  FFF7         	movff	lcd_putstr@str+1,tblptrh
  1387  001854                     	if	0	;tblptru may be non-zero
  1388  001854                     	endif
  1389  001854                     	if	0	;tblptru may be non-zero
  1390  001854                     	endif
  1391  001854  0008               	tblrd		*
  1392  001856  50F5               	movf	tablat,w,c
  1393  001858  0900               	iorlw	0
  1394  00185A  B4D8               	btfsc	status,2,c
  1395  00185C  0012               	return	
  1396  00185E  D7EC               	goto	l1658
  1397  001860                     __end_of_lcd_putstr:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           prodl	equ	0xFF3
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           postdec1	equ	0xFE5
  1407                           fsr1l	equ	0xFE1
  1408                           indf2	equ	0xFDF
  1409                           fsr2h	equ	0xFDA
  1410                           fsr2l	equ	0xFD9
  1411                           status	equ	0xFD8
  1412                           
  1413 ;; *************** function _lcd_init *****************
  1414 ;; Defined at:
  1415 ;;		line 234 in file "CurretSense.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;		None               void
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1432 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1433 ;;Total ram usage:        0 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    5
  1436 ;; This function calls:
  1437 ;;		_delay_ms
  1438 ;;		_delay_us
  1439 ;;		_lcd_clear
  1440 ;;		_lcd_config
  1441 ;;		_lcd_e_clock
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text2
  1448  001604                     __ptext2:
  1449                           	opt stack 0
  1450  001604                     _lcd_init:
  1451                           	opt stack 25
  1452                           
  1453                           ;CurretSense.c: 236: delay_ms(30);
  1454                           
  1455                           ;incstack = 0
  1456  001604  0E00               	movlw	0
  1457  001606  6E02               	movwf	delay_ms@ui_data+1,c
  1458  001608  0E1E               	movlw	30
  1459  00160A  6E01               	movwf	delay_ms@ui_data,c
  1460  00160C  EC43  F00C         	call	_delay_ms	;wreg free
  1461                           
  1462                           ;CurretSense.c: 237: LATBbits.LATB3 = 1;
  1463  001610  868A               	bsf	3978,3,c	;volatile
  1464                           
  1465                           ;CurretSense.c: 239: LATBbits.LATB2 = 0;
  1466  001612  948A               	bcf	3978,2,c	;volatile
  1467                           
  1468                           ;CurretSense.c: 240: delay_us(5);
  1469  001614  0E05               	movlw	5
  1470  001616  ECA1  F00C         	call	_delay_us
  1471                           
  1472                           ;CurretSense.c: 242: LATB = (LATB & 0x0F) | 0b00110000;
  1473  00161A  508A               	movf	3978,w,c	;volatile
  1474  00161C  0B0F               	andlw	15
  1475  00161E  0930               	iorlw	48
  1476  001620  6E8A               	movwf	3978,c	;volatile
  1477                           
  1478                           ;CurretSense.c: 243: lcd_e_clock();
  1479  001622  EC81  F00C         	call	_lcd_e_clock	;wreg free
  1480                           
  1481                           ;CurretSense.c: 244: delay_ms(2);
  1482  001626  0E00               	movlw	0
  1483  001628  6E02               	movwf	delay_ms@ui_data+1,c
  1484  00162A  0E02               	movlw	2
  1485  00162C  6E01               	movwf	delay_ms@ui_data,c
  1486  00162E  EC43  F00C         	call	_delay_ms	;wreg free
  1487                           
  1488                           ;CurretSense.c: 245: LATB = (LATB & 0x0F) | 0b00110000;
  1489  001632  508A               	movf	3978,w,c	;volatile
  1490  001634  0B0F               	andlw	15
  1491  001636  0930               	iorlw	48
  1492  001638  6E8A               	movwf	3978,c	;volatile
  1493                           
  1494                           ;CurretSense.c: 246: lcd_e_clock();
  1495  00163A  EC81  F00C         	call	_lcd_e_clock	;wreg free
  1496                           
  1497                           ;CurretSense.c: 247: delay_ms(2);
  1498  00163E  0E00               	movlw	0
  1499  001640  6E02               	movwf	delay_ms@ui_data+1,c
  1500  001642  0E02               	movlw	2
  1501  001644  6E01               	movwf	delay_ms@ui_data,c
  1502  001646  EC43  F00C         	call	_delay_ms	;wreg free
  1503                           
  1504                           ;CurretSense.c: 248: LATB = (LATB & 0x0F) | 0b00110000;
  1505  00164A  508A               	movf	3978,w,c	;volatile
  1506  00164C  0B0F               	andlw	15
  1507  00164E  0930               	iorlw	48
  1508  001650  6E8A               	movwf	3978,c	;volatile
  1509                           
  1510                           ;CurretSense.c: 249: lcd_e_clock();
  1511  001652  EC81  F00C         	call	_lcd_e_clock	;wreg free
  1512                           
  1513                           ;CurretSense.c: 250: delay_ms(2);
  1514  001656  0E00               	movlw	0
  1515  001658  6E02               	movwf	delay_ms@ui_data+1,c
  1516  00165A  0E02               	movlw	2
  1517  00165C  6E01               	movwf	delay_ms@ui_data,c
  1518  00165E  EC43  F00C         	call	_delay_ms	;wreg free
  1519                           
  1520                           ;CurretSense.c: 252: LATB = (LATB & 0x0F) | 0b00100000;
  1521  001662  508A               	movf	3978,w,c	;volatile
  1522  001664  0B0F               	andlw	15
  1523  001666  0920               	iorlw	32
  1524  001668  6E8A               	movwf	3978,c	;volatile
  1525                           
  1526                           ;CurretSense.c: 253: lcd_e_clock();
  1527  00166A  EC81  F00C         	call	_lcd_e_clock	;wreg free
  1528                           
  1529                           ;CurretSense.c: 254: delay_ms(2);
  1530  00166E  0E00               	movlw	0
  1531  001670  6E02               	movwf	delay_ms@ui_data+1,c
  1532  001672  0E02               	movlw	2
  1533  001674  6E01               	movwf	delay_ms@ui_data,c
  1534  001676  EC43  F00C         	call	_delay_ms	;wreg free
  1535                           
  1536                           ;CurretSense.c: 258: lcd_config(0b00101000);
  1537  00167A  0E28               	movlw	40
  1538  00167C  EC54  F00C         	call	_lcd_config
  1539                           
  1540                           ;CurretSense.c: 264: lcd_config(0b00000110);
  1541  001680  0E06               	movlw	6
  1542  001682  EC54  F00C         	call	_lcd_config
  1543                           
  1544                           ;CurretSense.c: 269: lcd_config(0b00001100);
  1545  001686  0E0C               	movlw	12
  1546  001688  EC54  F00C         	call	_lcd_config
  1547                           
  1548                           ;CurretSense.c: 274: lcd_clear();
  1549  00168C  EC8D  F00C         	call	_lcd_clear	;wreg free
  1550  001690  0012               	return	
  1551  001692                     __end_of_lcd_init:
  1552                           	opt stack 0
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           prodl	equ	0xFF3
  1558                           postinc0	equ	0xFEE
  1559                           wreg	equ	0xFE8
  1560                           postdec1	equ	0xFE5
  1561                           fsr1l	equ	0xFE1
  1562                           indf2	equ	0xFDF
  1563                           fsr2h	equ	0xFDA
  1564                           fsr2l	equ	0xFD9
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _lcd_clear *****************
  1568 ;; Defined at:
  1569 ;;		line 315 in file "CurretSense.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;		None               void
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1583 ;;      Params:         0       0       0       0       0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1586 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1587 ;;Total ram usage:        0 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    4
  1590 ;; This function calls:
  1591 ;;		_delay_ms
  1592 ;;		_lcd_config
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;;		_lcd_init
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text3
  1600  00191A                     __ptext3:
  1601                           	opt stack 0
  1602  00191A                     _lcd_clear:
  1603                           	opt stack 25
  1604                           
  1605                           ;CurretSense.c: 317: lcd_config(0x01);
  1606                           
  1607                           ;incstack = 0
  1608  00191A  0E01               	movlw	1
  1609  00191C  EC54  F00C         	call	_lcd_config
  1610                           
  1611                           ;CurretSense.c: 318: delay_ms(1);
  1612  001920  0E00               	movlw	0
  1613  001922  6E02               	movwf	delay_ms@ui_data+1,c
  1614  001924  0E01               	movlw	1
  1615  001926  6E01               	movwf	delay_ms@ui_data,c
  1616  001928  EC43  F00C         	call	_delay_ms	;wreg free
  1617  00192C  0012               	return	
  1618  00192E                     __end_of_lcd_clear:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           prodl	equ	0xFF3
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           postdec1	equ	0xFE5
  1628                           fsr1l	equ	0xFE1
  1629                           indf2	equ	0xFDF
  1630                           fsr2h	equ	0xFDA
  1631                           fsr2l	equ	0xFD9
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _lcd_home *****************
  1635 ;; Defined at:
  1636 ;;		line 321 in file "CurretSense.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;		None               void
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    4
  1657 ;; This function calls:
  1658 ;;		_delay_ms
  1659 ;;		_lcd_config
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text4
  1666  00192E                     __ptext4:
  1667                           	opt stack 0
  1668  00192E                     _lcd_home:
  1669                           	opt stack 26
  1670                           
  1671                           ;CurretSense.c: 323: lcd_config(0x02);
  1672                           
  1673                           ;incstack = 0
  1674  00192E  0E02               	movlw	2
  1675  001930  EC54  F00C         	call	_lcd_config
  1676                           
  1677                           ;CurretSense.c: 324: delay_ms(1);
  1678  001934  0E00               	movlw	0
  1679  001936  6E02               	movwf	delay_ms@ui_data+1,c
  1680  001938  0E01               	movlw	1
  1681  00193A  6E01               	movwf	delay_ms@ui_data,c
  1682  00193C  EC43  F00C         	call	_delay_ms	;wreg free
  1683  001940  0012               	return	
  1684  001942                     __end_of_lcd_home:
  1685                           	opt stack 0
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           prodl	equ	0xFF3
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           postdec1	equ	0xFE5
  1694                           fsr1l	equ	0xFE1
  1695                           indf2	equ	0xFDF
  1696                           fsr2h	equ	0xFDA
  1697                           fsr2l	equ	0xFD9
  1698                           status	equ	0xFD8
  1699                           
  1700 ;; *************** function _lcd_goto *****************
  1701 ;; Defined at:
  1702 ;;		line 348 in file "CurretSense.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  address         1    wreg     unsigned char 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  address         1    4[COMRAM] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;		None               void
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0
  1717 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1719 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1720 ;;Total ram usage:        1 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    4
  1723 ;; This function calls:
  1724 ;;		_lcd_config
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text5
  1731  001954                     __ptext5:
  1732                           	opt stack 0
  1733  001954                     _lcd_goto:
  1734                           	opt stack 26
  1735                           
  1736                           ;incstack = 0
  1737                           ;lcd_goto@address stored from wreg
  1738  001954  6E05               	movwf	lcd_goto@address,c
  1739                           
  1740                           ;CurretSense.c: 350: lcd_config(0x80 + address);
  1741  001956  5005               	movf	lcd_goto@address,w,c
  1742  001958  0F80               	addlw	128
  1743  00195A  EC54  F00C         	call	_lcd_config
  1744  00195E  0012               	return	
  1745  001960                     __end_of_lcd_goto:
  1746                           	opt stack 0
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           prodl	equ	0xFF3
  1752                           postinc0	equ	0xFEE
  1753                           wreg	equ	0xFE8
  1754                           postdec1	equ	0xFE5
  1755                           fsr1l	equ	0xFE1
  1756                           indf2	equ	0xFDF
  1757                           fsr2h	equ	0xFDA
  1758                           fsr2l	equ	0xFD9
  1759                           status	equ	0xFD8
  1760                           
  1761 ;; *************** function _lcd_config *****************
  1762 ;; Defined at:
  1763 ;;		line 288 in file "CurretSense.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  command         1    wreg     unsigned char 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  command         1    3[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;		None               void
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0
  1778 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1780 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        1 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    3
  1784 ;; This function calls:
  1785 ;;		_delay_ms
  1786 ;;		_delay_us
  1787 ;;		_lcd_4bit_write
  1788 ;; This function is called by:
  1789 ;;		_lcd_init
  1790 ;;		_lcd_clear
  1791 ;;		_lcd_home
  1792 ;;		_lcd_goto
  1793 ;;		_lcd_set_cursor
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text6
  1798  0018A8                     __ptext6:
  1799                           	opt stack 0
  1800  0018A8                     _lcd_config:
  1801                           	opt stack 26
  1802                           
  1803                           ;incstack = 0
  1804                           ;lcd_config@command stored from wreg
  1805  0018A8  6E04               	movwf	lcd_config@command,c
  1806                           
  1807                           ;CurretSense.c: 290: LATBbits.LATB2 = 0;
  1808  0018AA  948A               	bcf	3978,2,c	;volatile
  1809                           
  1810                           ;CurretSense.c: 291: delay_us(5);
  1811  0018AC  0E05               	movlw	5
  1812  0018AE  ECA1  F00C         	call	_delay_us
  1813                           
  1814                           ;CurretSense.c: 292: lcd_4bit_write(command);
  1815  0018B2  5004               	movf	lcd_config@command,w,c
  1816  0018B4  EC04  F00C         	call	_lcd_4bit_write
  1817                           
  1818                           ;CurretSense.c: 293: delay_ms(1);
  1819  0018B8  0E00               	movlw	0
  1820  0018BA  6E02               	movwf	delay_ms@ui_data+1,c
  1821  0018BC  0E01               	movlw	1
  1822  0018BE  6E01               	movwf	delay_ms@ui_data,c
  1823  0018C0  EC43  F00C         	call	_delay_ms	;wreg free
  1824  0018C4  0012               	return	
  1825  0018C6                     __end_of_lcd_config:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           prodl	equ	0xFF3
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           postdec1	equ	0xFE5
  1835                           fsr1l	equ	0xFE1
  1836                           indf2	equ	0xFDF
  1837                           fsr2h	equ	0xFDA
  1838                           fsr2l	equ	0xFD9
  1839                           status	equ	0xFD8
  1840                           
  1841 ;; *************** function _lcd_bcd *****************
  1842 ;; Defined at:
  1843 ;;		line 363 in file "CurretSense.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  uc_digit        1    wreg     unsigned char 
  1846 ;;  ui_number       2   15[COMRAM] unsigned int 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  uc_digit        1   31[COMRAM] unsigned char 
  1849 ;;  ui_decimal     10   21[COMRAM] unsigned int [5]
  1850 ;; Return value:  Size  Location     Type
  1851 ;;		None               void
  1852 ;; Registers used:
  1853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1859 ;;      Params:         2       0       0       0       0       0       0       0       0
  1860 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1861 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1862 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1863 ;;Total ram usage:       17 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    4
  1866 ;; This function calls:
  1867 ;;		___lwdiv
  1868 ;;		___lwmod
  1869 ;;		_lcd_putchar
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text7
  1876  001106                     __ptext7:
  1877                           	opt stack 0
  1878  001106                     _lcd_bcd:
  1879                           	opt stack 26
  1880                           
  1881                           ;incstack = 0
  1882                           ;lcd_bcd@uc_digit stored from wreg
  1883  001106  6E20               	movwf	lcd_bcd@uc_digit,c
  1884                           
  1885                           ;CurretSense.c: 365: unsigned int ui_decimal[5] ={ 0 };
  1886  001108  EE20  F035         	lfsr	2,lcd_bcd@F4836
  1887  00110C  EE10  F016         	lfsr	1,lcd_bcd@ui_decimal
  1888  001110  0E0A               	movlw	10
  1889  001112                     u1181:
  1890  001112  CFDE FFE6          	movff	postinc2,postinc1
  1891  001116  2EE8               	decfsz	wreg,f,c
  1892  001118  D7FC               	goto	u1181
  1893                           
  1894                           ;CurretSense.c: 367: ui_decimal[4] = ui_number/10000;
  1895  00111A  C010  F001         	movff	lcd_bcd@ui_number,___lwdiv@dividend
  1896  00111E  C011  F002         	movff	lcd_bcd@ui_number+1,___lwdiv@dividend+1
  1897  001122  0E27               	movlw	39
  1898  001124  6E04               	movwf	___lwdiv@divisor+1,c
  1899  001126  0E10               	movlw	16
  1900  001128  6E03               	movwf	___lwdiv@divisor,c
  1901  00112A  EC49  F00B         	call	___lwdiv	;wreg free
  1902  00112E  C001  F01E         	movff	?___lwdiv,lcd_bcd@ui_decimal+8
  1903  001132  C002  F01F         	movff	?___lwdiv+1,lcd_bcd@ui_decimal+9
  1904                           
  1905                           ;CurretSense.c: 368: ui_decimal[3] = ui_number%10000;
  1906  001136  C010  F001         	movff	lcd_bcd@ui_number,___lwmod@dividend
  1907  00113A  C011  F002         	movff	lcd_bcd@ui_number+1,___lwmod@dividend+1
  1908  00113E  0E27               	movlw	39
  1909  001140  6E04               	movwf	___lwmod@divisor+1,c
  1910  001142  0E10               	movlw	16
  1911  001144  6E03               	movwf	___lwmod@divisor,c
  1912  001146  ECE3  F00B         	call	___lwmod	;wreg free
  1913  00114A  C001  F01C         	movff	?___lwmod,lcd_bcd@ui_decimal+6
  1914  00114E  C002  F01D         	movff	?___lwmod+1,lcd_bcd@ui_decimal+7
  1915                           
  1916                           ;CurretSense.c: 369: ui_decimal[2] = ui_decimal[3]%1000;
  1917  001152  C01C  F001         	movff	lcd_bcd@ui_decimal+6,___lwmod@dividend
  1918  001156  C01D  F002         	movff	lcd_bcd@ui_decimal+7,___lwmod@dividend+1
  1919  00115A  0E03               	movlw	3
  1920  00115C  6E04               	movwf	___lwmod@divisor+1,c
  1921  00115E  0EE8               	movlw	232
  1922  001160  6E03               	movwf	___lwmod@divisor,c
  1923  001162  ECE3  F00B         	call	___lwmod	;wreg free
  1924  001166  C001  F01A         	movff	?___lwmod,lcd_bcd@ui_decimal+4
  1925  00116A  C002  F01B         	movff	?___lwmod+1,lcd_bcd@ui_decimal+5
  1926                           
  1927                           ;CurretSense.c: 370: ui_decimal[3] = ui_decimal[3]/1000;
  1928  00116E  C01C  F001         	movff	lcd_bcd@ui_decimal+6,___lwdiv@dividend
  1929  001172  C01D  F002         	movff	lcd_bcd@ui_decimal+7,___lwdiv@dividend+1
  1930  001176  0E03               	movlw	3
  1931  001178  6E04               	movwf	___lwdiv@divisor+1,c
  1932  00117A  0EE8               	movlw	232
  1933  00117C  6E03               	movwf	___lwdiv@divisor,c
  1934  00117E  EC49  F00B         	call	___lwdiv	;wreg free
  1935  001182  C001  F01C         	movff	?___lwdiv,lcd_bcd@ui_decimal+6
  1936  001186  C002  F01D         	movff	?___lwdiv+1,lcd_bcd@ui_decimal+7
  1937                           
  1938                           ;CurretSense.c: 371: ui_decimal[1] = ui_decimal[2]%100;
  1939  00118A  C01A  F001         	movff	lcd_bcd@ui_decimal+4,___lwmod@dividend
  1940  00118E  C01B  F002         	movff	lcd_bcd@ui_decimal+5,___lwmod@dividend+1
  1941  001192  0E00               	movlw	0
  1942  001194  6E04               	movwf	___lwmod@divisor+1,c
  1943  001196  0E64               	movlw	100
  1944  001198  6E03               	movwf	___lwmod@divisor,c
  1945  00119A  ECE3  F00B         	call	___lwmod	;wreg free
  1946  00119E  C001  F018         	movff	?___lwmod,lcd_bcd@ui_decimal+2
  1947  0011A2  C002  F019         	movff	?___lwmod+1,lcd_bcd@ui_decimal+3
  1948                           
  1949                           ;CurretSense.c: 372: ui_decimal[2] = ui_decimal[2]/100;
  1950  0011A6  C01A  F001         	movff	lcd_bcd@ui_decimal+4,___lwdiv@dividend
  1951  0011AA  C01B  F002         	movff	lcd_bcd@ui_decimal+5,___lwdiv@dividend+1
  1952  0011AE  0E00               	movlw	0
  1953  0011B0  6E04               	movwf	___lwdiv@divisor+1,c
  1954  0011B2  0E64               	movlw	100
  1955  0011B4  6E03               	movwf	___lwdiv@divisor,c
  1956  0011B6  EC49  F00B         	call	___lwdiv	;wreg free
  1957  0011BA  C001  F01A         	movff	?___lwdiv,lcd_bcd@ui_decimal+4
  1958  0011BE  C002  F01B         	movff	?___lwdiv+1,lcd_bcd@ui_decimal+5
  1959                           
  1960                           ;CurretSense.c: 373: ui_decimal[0] = ui_decimal[1]%10;
  1961  0011C2  C018  F001         	movff	lcd_bcd@ui_decimal+2,___lwmod@dividend
  1962  0011C6  C019  F002         	movff	lcd_bcd@ui_decimal+3,___lwmod@dividend+1
  1963  0011CA  0E00               	movlw	0
  1964  0011CC  6E04               	movwf	___lwmod@divisor+1,c
  1965  0011CE  0E0A               	movlw	10
  1966  0011D0  6E03               	movwf	___lwmod@divisor,c
  1967  0011D2  ECE3  F00B         	call	___lwmod	;wreg free
  1968  0011D6  C001  F016         	movff	?___lwmod,lcd_bcd@ui_decimal
  1969  0011DA  C002  F017         	movff	?___lwmod+1,lcd_bcd@ui_decimal+1
  1970                           
  1971                           ;CurretSense.c: 374: ui_decimal[1] = ui_decimal[1]/10;
  1972  0011DE  C018  F001         	movff	lcd_bcd@ui_decimal+2,___lwdiv@dividend
  1973  0011E2  C019  F002         	movff	lcd_bcd@ui_decimal+3,___lwdiv@dividend+1
  1974  0011E6  0E00               	movlw	0
  1975  0011E8  6E04               	movwf	___lwdiv@divisor+1,c
  1976  0011EA  0E0A               	movlw	10
  1977  0011EC  6E03               	movwf	___lwdiv@divisor,c
  1978  0011EE  EC49  F00B         	call	___lwdiv	;wreg free
  1979  0011F2  C001  F018         	movff	?___lwdiv,lcd_bcd@ui_decimal+2
  1980  0011F6  C002  F019         	movff	?___lwdiv+1,lcd_bcd@ui_decimal+3
  1981                           
  1982                           ;CurretSense.c: 376: if (uc_digit > 5) uc_digit = 5;
  1983  0011FA  0E05               	movlw	5
  1984  0011FC  6420               	cpfsgt	lcd_bcd@uc_digit,c
  1985  0011FE  D01C               	goto	L4
  1986  001200  0E05               	movlw	5
  1987  001202  6E20               	movwf	lcd_bcd@uc_digit,c
  1988  001204  D019               	goto	L4
  1989  001206                     l1698:
  1990                           
  1991                           ;CurretSense.c: 378: {
  1992                           ;CurretSense.c: 379: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  1993  001206  0EFE               	movlw	254
  1994  001208  6E12               	movwf	??_lcd_bcd& (0+255),c
  1995  00120A  0EFF               	movlw	255
  1996  00120C  6E13               	movwf	(??_lcd_bcd+1)& (0+255),c
  1997  00120E  5020               	movf	lcd_bcd@uc_digit,w,c
  1998  001210  6E14               	movwf	(??_lcd_bcd+2)& (0+255),c
  1999  001212  6A15               	clrf	(??_lcd_bcd+3)& (0+255),c
  2000  001214  90D8               	bcf	status,0,c
  2001  001216  3614               	rlcf	??_lcd_bcd+2,f,c
  2002  001218  3615               	rlcf	??_lcd_bcd+3,f,c
  2003  00121A  5012               	movf	??_lcd_bcd,w,c
  2004  00121C  2614               	addwf	??_lcd_bcd+2,f,c
  2005  00121E  5013               	movf	??_lcd_bcd+1,w,c
  2006  001220  2215               	addwfc	??_lcd_bcd+3,f,c
  2007  001222  0E16               	movlw	low lcd_bcd@ui_decimal
  2008  001224  2414               	addwf	??_lcd_bcd+2,w,c
  2009  001226  6ED9               	movwf	fsr2l,c
  2010  001228  0E00               	movlw	high lcd_bcd@ui_decimal
  2011  00122A  2015               	addwfc	??_lcd_bcd+3,w,c
  2012  00122C  6EDA               	movwf	fsr2h,c
  2013  00122E  50DF               	movf	indf2,w,c
  2014  001230  0F30               	addlw	48
  2015  001232  EC63  F00C         	call	_lcd_putchar
  2016  001236  0620               	decf	lcd_bcd@uc_digit,f,c
  2017  001238                     L4:
  2018  001238  6620               	tstfsz	lcd_bcd@uc_digit,c
  2019  00123A  D7E5               	goto	l1698
  2020  00123C  0012               	return	
  2021  00123E                     __end_of_lcd_bcd:
  2022                           	opt stack 0
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           prodl	equ	0xFF3
  2028                           postinc0	equ	0xFEE
  2029                           wreg	equ	0xFE8
  2030                           postinc1	equ	0xFE6
  2031                           postdec1	equ	0xFE5
  2032                           fsr1l	equ	0xFE1
  2033                           indf2	equ	0xFDF
  2034                           postinc2	equ	0xFDE
  2035                           fsr2h	equ	0xFDA
  2036                           fsr2l	equ	0xFD9
  2037                           status	equ	0xFD8
  2038                           
  2039 ;; *************** function _lcd_putchar *****************
  2040 ;; Defined at:
  2041 ;;		line 297 in file "CurretSense.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  data            1    wreg     unsigned char 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  data            1    3[COMRAM] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;		None               void
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0
  2056 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2058 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2059 ;;Total ram usage:        1 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    3
  2062 ;; This function calls:
  2063 ;;		_delay_ms
  2064 ;;		_delay_us
  2065 ;;		_lcd_4bit_write
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;;		_lcd_putstr
  2069 ;;		_lcd_bcd
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text8
  2074  0018C6                     __ptext8:
  2075                           	opt stack 0
  2076  0018C6                     _lcd_putchar:
  2077                           	opt stack 26
  2078                           
  2079                           ;incstack = 0
  2080                           ;lcd_putchar@data stored from wreg
  2081  0018C6  6E04               	movwf	lcd_putchar@data,c
  2082                           
  2083                           ;CurretSense.c: 299: LATBbits.LATB2 = 1;
  2084  0018C8  848A               	bsf	3978,2,c	;volatile
  2085                           
  2086                           ;CurretSense.c: 300: delay_us(5);
  2087  0018CA  0E05               	movlw	5
  2088  0018CC  ECA1  F00C         	call	_delay_us
  2089                           
  2090                           ;CurretSense.c: 301: lcd_4bit_write(data);
  2091  0018D0  5004               	movf	lcd_putchar@data,w,c
  2092  0018D2  EC04  F00C         	call	_lcd_4bit_write
  2093                           
  2094                           ;CurretSense.c: 302: delay_ms(1);
  2095  0018D6  0E00               	movlw	0
  2096  0018D8  6E02               	movwf	delay_ms@ui_data+1,c
  2097  0018DA  0E01               	movlw	1
  2098  0018DC  6E01               	movwf	delay_ms@ui_data,c
  2099  0018DE  EC43  F00C         	call	_delay_ms	;wreg free
  2100  0018E2  0012               	return	
  2101  0018E4                     __end_of_lcd_putchar:
  2102                           	opt stack 0
  2103                           tblptru	equ	0xFF8
  2104                           tblptrh	equ	0xFF7
  2105                           tblptrl	equ	0xFF6
  2106                           tablat	equ	0xFF5
  2107                           prodl	equ	0xFF3
  2108                           postinc0	equ	0xFEE
  2109                           wreg	equ	0xFE8
  2110                           postinc1	equ	0xFE6
  2111                           postdec1	equ	0xFE5
  2112                           fsr1l	equ	0xFE1
  2113                           indf2	equ	0xFDF
  2114                           postinc2	equ	0xFDE
  2115                           fsr2h	equ	0xFDA
  2116                           fsr2l	equ	0xFD9
  2117                           status	equ	0xFD8
  2118                           
  2119 ;; *************** function _lcd_4bit_write *****************
  2120 ;; Defined at:
  2121 ;;		line 278 in file "CurretSense.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  data            1    wreg     unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  data            1    2[COMRAM] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;		None               void
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2135 ;;      Params:         0       0       0       0       0       0       0       0       0
  2136 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2137 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2138 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2139 ;;Total ram usage:        2 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    2
  2142 ;; This function calls:
  2143 ;;		_lcd_e_clock
  2144 ;; This function is called by:
  2145 ;;		_lcd_config
  2146 ;;		_lcd_putchar
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text9
  2151  001808                     __ptext9:
  2152                           	opt stack 0
  2153  001808                     _lcd_4bit_write:
  2154                           	opt stack 26
  2155                           
  2156                           ;incstack = 0
  2157                           ;lcd_4bit_write@data stored from wreg
  2158  001808  6E03               	movwf	lcd_4bit_write@data,c
  2159                           
  2160                           ;CurretSense.c: 280: LATB = (LATB & 0x0F) | (data & 0xF0);
  2161  00180A  C003  F002         	movff	lcd_4bit_write@data,??_lcd_4bit_write
  2162  00180E  0EF0               	movlw	240
  2163  001810  1602               	andwf	??_lcd_4bit_write,f,c
  2164  001812  508A               	movf	3978,w,c	;volatile
  2165  001814  0B0F               	andlw	15
  2166  001816  1002               	iorwf	??_lcd_4bit_write,w,c
  2167  001818  6E8A               	movwf	3978,c	;volatile
  2168                           
  2169                           ;CurretSense.c: 281: lcd_e_clock();
  2170  00181A  EC81  F00C         	call	_lcd_e_clock	;wreg free
  2171                           
  2172                           ;CurretSense.c: 283: LATB = (LATB & 0x0F) | (data << 4);
  2173  00181E  C003  F002         	movff	lcd_4bit_write@data,??_lcd_4bit_write
  2174  001822  3A02               	swapf	??_lcd_4bit_write,f,c
  2175  001824  0EF0               	movlw	240
  2176  001826  1602               	andwf	??_lcd_4bit_write,f,c
  2177  001828  508A               	movf	3978,w,c	;volatile
  2178  00182A  0B0F               	andlw	15
  2179  00182C  1002               	iorwf	??_lcd_4bit_write,w,c
  2180  00182E  6E8A               	movwf	3978,c	;volatile
  2181                           
  2182                           ;CurretSense.c: 284: lcd_e_clock();
  2183  001830  EC81  F00C         	call	_lcd_e_clock	;wreg free
  2184  001834  0012               	return	
  2185  001836                     __end_of_lcd_4bit_write:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           prodl	equ	0xFF3
  2192                           postinc0	equ	0xFEE
  2193                           wreg	equ	0xFE8
  2194                           postinc1	equ	0xFE6
  2195                           postdec1	equ	0xFE5
  2196                           fsr1l	equ	0xFE1
  2197                           indf2	equ	0xFDF
  2198                           postinc2	equ	0xFDE
  2199                           fsr2h	equ	0xFDA
  2200                           fsr2l	equ	0xFD9
  2201                           status	equ	0xFD8
  2202                           
  2203 ;; *************** function _lcd_e_clock *****************
  2204 ;; Defined at:
  2205 ;;		line 354 in file "CurretSense.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;		None               void
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2219 ;;      Params:         0       0       0       0       0       0       0       0       0
  2220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2222 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2223 ;;Total ram usage:        0 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    1
  2226 ;; This function calls:
  2227 ;;		_delay_us
  2228 ;; This function is called by:
  2229 ;;		_lcd_init
  2230 ;;		_lcd_4bit_write
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text10
  2235  001902                     __ptext10:
  2236                           	opt stack 0
  2237  001902                     _lcd_e_clock:
  2238                           	opt stack 26
  2239                           
  2240                           ;CurretSense.c: 356: delay_us(10);
  2241                           
  2242                           ;incstack = 0
  2243  001902  0E0A               	movlw	10
  2244  001904  ECA1  F00C         	call	_delay_us
  2245                           
  2246                           ;CurretSense.c: 357: LATBbits.LATB3 = 0;
  2247  001908  968A               	bcf	3978,3,c	;volatile
  2248                           
  2249                           ;CurretSense.c: 358: delay_us(100);
  2250  00190A  0E64               	movlw	100
  2251  00190C  ECA1  F00C         	call	_delay_us
  2252                           
  2253                           ;CurretSense.c: 359: LATBbits.LATB3 = 1;
  2254  001910  868A               	bsf	3978,3,c	;volatile
  2255                           
  2256                           ;CurretSense.c: 360: delay_us(100);
  2257  001912  0E64               	movlw	100
  2258  001914  ECA1  F00C         	call	_delay_us
  2259  001918  0012               	return	
  2260  00191A                     __end_of_lcd_e_clock:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           prodl	equ	0xFF3
  2267                           postinc0	equ	0xFEE
  2268                           wreg	equ	0xFE8
  2269                           postinc1	equ	0xFE6
  2270                           postdec1	equ	0xFE5
  2271                           fsr1l	equ	0xFE1
  2272                           indf2	equ	0xFDF
  2273                           postinc2	equ	0xFDE
  2274                           fsr2h	equ	0xFDA
  2275                           fsr2l	equ	0xFD9
  2276                           status	equ	0xFD8
  2277                           
  2278 ;; *************** function _delay_us *****************
  2279 ;; Defined at:
  2280 ;;		line 394 in file "CurretSense.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  uc_data         1    wreg     unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  uc_data         1    0[COMRAM] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;		None               void
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2294 ;;      Params:         0       0       0       0       0       0       0       0       0
  2295 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2297 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2298 ;;Total ram usage:        1 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_lcd_init
  2304 ;;		_lcd_config
  2305 ;;		_lcd_putchar
  2306 ;;		_lcd_e_clock
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text11
  2311  001942                     __ptext11:
  2312                           	opt stack 0
  2313  001942                     _delay_us:
  2314                           	opt stack 26
  2315                           
  2316                           ;incstack = 0
  2317                           ;delay_us@uc_data stored from wreg
  2318  001942  6E01               	movwf	delay_us@uc_data,c
  2319  001944  D004               	goto	L5
  2320  001946                     l1524:
  2321                           
  2322                           ;CurretSense.c: 397: {
  2323                           ;CurretSense.c: 398: _delay((unsigned long)((1)*(48000000/4000000.0)));
  2324  001946  0E04               	movlw	4
  2325  001948                     u1977:
  2326  001948  2EE8               	decfsz	wreg,f,c
  2327  00194A  D7FE               	goto	u1977
  2328  00194C  0601               	decf	delay_us@uc_data,f,c
  2329  00194E                     L5:
  2330  00194E  6601               	tstfsz	delay_us@uc_data,c
  2331  001950  D7FA               	goto	l1524
  2332  001952  0012               	return	
  2333  001954                     __end_of_delay_us:
  2334                           	opt stack 0
  2335                           tblptru	equ	0xFF8
  2336                           tblptrh	equ	0xFF7
  2337                           tblptrl	equ	0xFF6
  2338                           tablat	equ	0xFF5
  2339                           prodl	equ	0xFF3
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           postinc1	equ	0xFE6
  2343                           postdec1	equ	0xFE5
  2344                           fsr1l	equ	0xFE1
  2345                           indf2	equ	0xFDF
  2346                           postinc2	equ	0xFDE
  2347                           fsr2h	equ	0xFDA
  2348                           fsr2l	equ	0xFD9
  2349                           status	equ	0xFD8
  2350                           
  2351 ;; *************** function _delay_ms *****************
  2352 ;; Defined at:
  2353 ;;		line 385 in file "CurretSense.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  ui_data         2    0[COMRAM] unsigned int 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;		None               void
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2367 ;;      Params:         2       0       0       0       0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2369 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2370 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2371 ;;Total ram usage:        3 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;;		_lcd_init
  2378 ;;		_lcd_config
  2379 ;;		_lcd_putchar
  2380 ;;		_lcd_clear
  2381 ;;		_lcd_home
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text12
  2386  001886                     __ptext12:
  2387                           	opt stack 0
  2388  001886                     _delay_ms:
  2389                           	opt stack 28
  2390                           
  2391                           ;CurretSense.c: 387: for(;ui_data > 0; ui_data--)
  2392                           
  2393                           ;incstack = 0
  2394  001886  5002               	movf	delay_ms@ui_data+1,w,c
  2395  001888  1001               	iorwf	delay_ms@ui_data,w,c
  2396  00188A  B4D8               	btfsc	status,2,c
  2397  00188C  D00C               	goto	l206
  2398                           
  2399                           ;CurretSense.c: 388: {
  2400                           ;CurretSense.c: 389: _delay((unsigned long)((1)*(48000000/4000.0)));
  2401  00188E  0E10               	movlw	16
  2402  001890  6E03               	movwf	??_delay_ms& (0+255),c
  2403  001892  0E94               	movlw	148
  2404  001894                     u1987:
  2405  001894  2EE8               	decfsz	wreg,f,c
  2406  001896  D7FE               	goto	u1987
  2407  001898  2E03               	decfsz	??_delay_ms& (0+255),f,c
  2408  00189A  D7FC               	goto	u1987
  2409  00189C  D000               	nop2	
  2410  00189E  0601               	decf	delay_ms@ui_data,f,c
  2411  0018A0  A0D8               	btfss	status,0,c
  2412  0018A2  0602               	decf	delay_ms@ui_data+1,f,c
  2413  0018A4  D7F0               	goto	_delay_ms
  2414  0018A6                     l206:
  2415  0018A6  0012               	return	
  2416  0018A8                     __end_of_delay_ms:
  2417                           	opt stack 0
  2418                           tblptru	equ	0xFF8
  2419                           tblptrh	equ	0xFF7
  2420                           tblptrl	equ	0xFF6
  2421                           tablat	equ	0xFF5
  2422                           prodl	equ	0xFF3
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           postinc1	equ	0xFE6
  2426                           postdec1	equ	0xFE5
  2427                           fsr1l	equ	0xFE1
  2428                           indf2	equ	0xFDF
  2429                           postinc2	equ	0xFDE
  2430                           fsr2h	equ	0xFDA
  2431                           fsr2l	equ	0xFD9
  2432                           status	equ	0xFD8
  2433                           
  2434 ;; *************** function _bcd *****************
  2435 ;; Defined at:
  2436 ;;		line 402 in file "CurretSense.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  uc_digit        1    wreg     unsigned char 
  2439 ;;  ui_number       2   15[COMRAM] unsigned int 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  uc_digit        1   33[COMRAM] unsigned char 
  2442 ;;  ui_decimal     10   23[COMRAM] unsigned int [5]
  2443 ;;  value           2   21[COMRAM] unsigned int 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;		None               void
  2446 ;; Registers used:
  2447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2453 ;;      Params:         2       0       0       0       0       0       0       0       0
  2454 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2455 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2456 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2457 ;;Total ram usage:       19 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		___lwdiv
  2462 ;;		___lwmod
  2463 ;; This function is called by:
  2464 ;;		_main
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text13
  2469  000D64                     __ptext13:
  2470                           	opt stack 0
  2471  000D64                     _bcd:
  2472                           	opt stack 29
  2473                           
  2474                           ;incstack = 0
  2475                           ;bcd@uc_digit stored from wreg
  2476  000D64  6E22               	movwf	bcd@uc_digit,c
  2477                           
  2478                           ;CurretSense.c: 404: unsigned int ui_decimal[5] ={ 0 }, value = 0;
  2479  000D66  EE20  F02B         	lfsr	2,bcd@F4844
  2480  000D6A  EE10  F018         	lfsr	1,bcd@ui_decimal
  2481  000D6E  0E0A               	movlw	10
  2482  000D70                     u1221:
  2483  000D70  CFDE FFE6          	movff	postinc2,postinc1
  2484  000D74  2EE8               	decfsz	wreg,f,c
  2485  000D76  D7FC               	goto	u1221
  2486  000D78  0E00               	movlw	0
  2487  000D7A  6E17               	movwf	bcd@value+1,c
  2488  000D7C  0E00               	movlw	0
  2489  000D7E  6E16               	movwf	bcd@value,c
  2490                           
  2491                           ;CurretSense.c: 406: ui_decimal[4] = ui_number/10000;
  2492  000D80  C010  F001         	movff	bcd@ui_number,___lwdiv@dividend
  2493  000D84  C011  F002         	movff	bcd@ui_number+1,___lwdiv@dividend+1
  2494  000D88  0E27               	movlw	39
  2495  000D8A  6E04               	movwf	___lwdiv@divisor+1,c
  2496  000D8C  0E10               	movlw	16
  2497  000D8E  6E03               	movwf	___lwdiv@divisor,c
  2498  000D90  EC49  F00B         	call	___lwdiv	;wreg free
  2499  000D94  C001  F020         	movff	?___lwdiv,bcd@ui_decimal+8
  2500  000D98  C002  F021         	movff	?___lwdiv+1,bcd@ui_decimal+9
  2501                           
  2502                           ;CurretSense.c: 407: ui_decimal[3] = ui_number%10000;
  2503  000D9C  C010  F001         	movff	bcd@ui_number,___lwmod@dividend
  2504  000DA0  C011  F002         	movff	bcd@ui_number+1,___lwmod@dividend+1
  2505  000DA4  0E27               	movlw	39
  2506  000DA6  6E04               	movwf	___lwmod@divisor+1,c
  2507  000DA8  0E10               	movlw	16
  2508  000DAA  6E03               	movwf	___lwmod@divisor,c
  2509  000DAC  ECE3  F00B         	call	___lwmod	;wreg free
  2510  000DB0  C001  F01E         	movff	?___lwmod,bcd@ui_decimal+6
  2511  000DB4  C002  F01F         	movff	?___lwmod+1,bcd@ui_decimal+7
  2512                           
  2513                           ;CurretSense.c: 408: ui_decimal[2] = ui_decimal[3]%1000;
  2514  000DB8  C01E  F001         	movff	bcd@ui_decimal+6,___lwmod@dividend
  2515  000DBC  C01F  F002         	movff	bcd@ui_decimal+7,___lwmod@dividend+1
  2516  000DC0  0E03               	movlw	3
  2517  000DC2  6E04               	movwf	___lwmod@divisor+1,c
  2518  000DC4  0EE8               	movlw	232
  2519  000DC6  6E03               	movwf	___lwmod@divisor,c
  2520  000DC8  ECE3  F00B         	call	___lwmod	;wreg free
  2521  000DCC  C001  F01C         	movff	?___lwmod,bcd@ui_decimal+4
  2522  000DD0  C002  F01D         	movff	?___lwmod+1,bcd@ui_decimal+5
  2523                           
  2524                           ;CurretSense.c: 409: ui_decimal[3] = ui_decimal[3]/1000;
  2525  000DD4  C01E  F001         	movff	bcd@ui_decimal+6,___lwdiv@dividend
  2526  000DD8  C01F  F002         	movff	bcd@ui_decimal+7,___lwdiv@dividend+1
  2527  000DDC  0E03               	movlw	3
  2528  000DDE  6E04               	movwf	___lwdiv@divisor+1,c
  2529  000DE0  0EE8               	movlw	232
  2530  000DE2  6E03               	movwf	___lwdiv@divisor,c
  2531  000DE4  EC49  F00B         	call	___lwdiv	;wreg free
  2532  000DE8  C001  F01E         	movff	?___lwdiv,bcd@ui_decimal+6
  2533  000DEC  C002  F01F         	movff	?___lwdiv+1,bcd@ui_decimal+7
  2534                           
  2535                           ;CurretSense.c: 410: ui_decimal[1] = ui_decimal[2]%100;
  2536  000DF0  C01C  F001         	movff	bcd@ui_decimal+4,___lwmod@dividend
  2537  000DF4  C01D  F002         	movff	bcd@ui_decimal+5,___lwmod@dividend+1
  2538  000DF8  0E00               	movlw	0
  2539  000DFA  6E04               	movwf	___lwmod@divisor+1,c
  2540  000DFC  0E64               	movlw	100
  2541  000DFE  6E03               	movwf	___lwmod@divisor,c
  2542  000E00  ECE3  F00B         	call	___lwmod	;wreg free
  2543  000E04  C001  F01A         	movff	?___lwmod,bcd@ui_decimal+2
  2544  000E08  C002  F01B         	movff	?___lwmod+1,bcd@ui_decimal+3
  2545                           
  2546                           ;CurretSense.c: 411: ui_decimal[2] = ui_decimal[2]/100;
  2547  000E0C  C01C  F001         	movff	bcd@ui_decimal+4,___lwdiv@dividend
  2548  000E10  C01D  F002         	movff	bcd@ui_decimal+5,___lwdiv@dividend+1
  2549  000E14  0E00               	movlw	0
  2550  000E16  6E04               	movwf	___lwdiv@divisor+1,c
  2551  000E18  0E64               	movlw	100
  2552  000E1A  6E03               	movwf	___lwdiv@divisor,c
  2553  000E1C  EC49  F00B         	call	___lwdiv	;wreg free
  2554  000E20  C001  F01C         	movff	?___lwdiv,bcd@ui_decimal+4
  2555  000E24  C002  F01D         	movff	?___lwdiv+1,bcd@ui_decimal+5
  2556                           
  2557                           ;CurretSense.c: 412: ui_decimal[0] = ui_decimal[1]%10;
  2558  000E28  C01A  F001         	movff	bcd@ui_decimal+2,___lwmod@dividend
  2559  000E2C  C01B  F002         	movff	bcd@ui_decimal+3,___lwmod@dividend+1
  2560  000E30  0E00               	movlw	0
  2561  000E32  6E04               	movwf	___lwmod@divisor+1,c
  2562  000E34  0E0A               	movlw	10
  2563  000E36  6E03               	movwf	___lwmod@divisor,c
  2564  000E38  ECE3  F00B         	call	___lwmod	;wreg free
  2565  000E3C  C001  F018         	movff	?___lwmod,bcd@ui_decimal
  2566  000E40  C002  F019         	movff	?___lwmod+1,bcd@ui_decimal+1
  2567                           
  2568                           ;CurretSense.c: 413: ui_decimal[1] = ui_decimal[1]/10;
  2569  000E44  C01A  F001         	movff	bcd@ui_decimal+2,___lwdiv@dividend
  2570  000E48  C01B  F002         	movff	bcd@ui_decimal+3,___lwdiv@dividend+1
  2571  000E4C  0E00               	movlw	0
  2572  000E4E  6E04               	movwf	___lwdiv@divisor+1,c
  2573  000E50  0E0A               	movlw	10
  2574  000E52  6E03               	movwf	___lwdiv@divisor,c
  2575  000E54  EC49  F00B         	call	___lwdiv	;wreg free
  2576  000E58  C001  F01A         	movff	?___lwdiv,bcd@ui_decimal+2
  2577  000E5C  C002  F01B         	movff	?___lwdiv+1,bcd@ui_decimal+3
  2578                           
  2579                           ;CurretSense.c: 415: if (uc_digit > 5) uc_digit = 5;
  2580  000E60  0E05               	movlw	5
  2581  000E62  6422               	cpfsgt	bcd@uc_digit,c
  2582  000E64  D077               	goto	L14
  2583  000E66  0E05               	movlw	5
  2584  000E68  6E22               	movwf	bcd@uc_digit,c
  2585  000E6A  D074               	goto	L14
  2586  000E6C                     l1732:
  2587                           
  2588                           ;CurretSense.c: 417: {
  2589                           ;CurretSense.c: 418: value = ui_decimal[uc_digit - 1];
  2590  000E6C  0EFE               	movlw	254
  2591  000E6E  6E12               	movwf	??_bcd& (0+255),c
  2592  000E70  0EFF               	movlw	255
  2593  000E72  6E13               	movwf	(??_bcd+1)& (0+255),c
  2594  000E74  5022               	movf	bcd@uc_digit,w,c
  2595  000E76  6E14               	movwf	(??_bcd+2)& (0+255),c
  2596  000E78  6A15               	clrf	(??_bcd+3)& (0+255),c
  2597  000E7A  90D8               	bcf	status,0,c
  2598  000E7C  3614               	rlcf	??_bcd+2,f,c
  2599  000E7E  3615               	rlcf	??_bcd+3,f,c
  2600  000E80  5012               	movf	??_bcd,w,c
  2601  000E82  2614               	addwf	??_bcd+2,f,c
  2602  000E84  5013               	movf	??_bcd+1,w,c
  2603  000E86  2215               	addwfc	??_bcd+3,f,c
  2604  000E88  0E18               	movlw	low bcd@ui_decimal
  2605  000E8A  2414               	addwf	??_bcd+2,w,c
  2606  000E8C  6ED9               	movwf	fsr2l,c
  2607  000E8E  0E00               	movlw	high bcd@ui_decimal
  2608  000E90  2015               	addwfc	??_bcd+3,w,c
  2609  000E92  6EDA               	movwf	fsr2h,c
  2610  000E94  CFDE F016          	movff	postinc2,bcd@value
  2611  000E98  CFDD F017          	movff	postdec2,bcd@value+1
  2612                           
  2613                           ;CurretSense.c: 419: switch(value)
  2614  000E9C  D020               	goto	l1736
  2615  000E9E                     l220:
  2616                           
  2617                           ;CurretSense.c: 422: LATAbits.LATA4 = 0;
  2618  000E9E  9889               	bcf	3977,4,c	;volatile
  2619  000EA0  D001               	goto	L6
  2620  000EA2                     l222:
  2621                           
  2622                           ;CurretSense.c: 428: LATAbits.LATA4 = 1;
  2623  000EA2  8889               	bsf	3977,4,c	;volatile
  2624  000EA4                     L6:
  2625                           
  2626                           ;CurretSense.c: 429: LATAbits.LATA1 = 0;
  2627  000EA4  9289               	bcf	3977,1,c	;volatile
  2628  000EA6  D002               	goto	L7
  2629  000EA8                     l223:
  2630                           
  2631                           ;CurretSense.c: 434: LATAbits.LATA4 = 0;
  2632  000EA8  9889               	bcf	3977,4,c	;volatile
  2633  000EAA  D004               	goto	L8
  2634  000EAC                     L7:
  2635                           
  2636                           ;CurretSense.c: 436: LATAbits.LATA2 = 0;
  2637  000EAC  9489               	bcf	3977,2,c	;volatile
  2638  000EAE                     L9:
  2639                           
  2640                           ;CurretSense.c: 437: LATAbits.LATA3 = 0;
  2641  000EAE  9689               	bcf	3977,3,c	;volatile
  2642                           
  2643                           ;CurretSense.c: 438: break;
  2644  000EB0  D03D               	goto	l1738
  2645  000EB2                     l224:
  2646                           
  2647                           ;CurretSense.c: 440: LATAbits.LATA4 = 1;
  2648  000EB2  8889               	bsf	3977,4,c	;volatile
  2649  000EB4                     L8:
  2650                           
  2651                           ;CurretSense.c: 441: LATAbits.LATA1 = 1;
  2652  000EB4  8289               	bsf	3977,1,c	;volatile
  2653  000EB6  D7FA               	goto	L7
  2654  000EB8                     l225:
  2655                           
  2656                           ;CurretSense.c: 446: LATAbits.LATA4 = 0;
  2657  000EB8  9889               	bcf	3977,4,c	;volatile
  2658  000EBA  D001               	goto	L11
  2659  000EBC                     l226:
  2660                           
  2661                           ;CurretSense.c: 452: LATAbits.LATA4 = 1;
  2662  000EBC  8889               	bsf	3977,4,c	;volatile
  2663  000EBE                     L11:
  2664                           
  2665                           ;CurretSense.c: 453: LATAbits.LATA1 = 0;
  2666  000EBE  9289               	bcf	3977,1,c	;volatile
  2667  000EC0  D002               	goto	L12
  2668  000EC2                     l227:
  2669                           
  2670                           ;CurretSense.c: 458: LATAbits.LATA4 = 0;
  2671  000EC2  9889               	bcf	3977,4,c	;volatile
  2672  000EC4  D003               	goto	L13
  2673  000EC6                     L12:
  2674                           
  2675                           ;CurretSense.c: 460: LATAbits.LATA2 = 1;
  2676  000EC6  8489               	bsf	3977,2,c	;volatile
  2677  000EC8  D7F2               	goto	L9
  2678  000ECA                     l228:
  2679                           
  2680                           ;CurretSense.c: 464: LATAbits.LATA4 = 1;
  2681  000ECA  8889               	bsf	3977,4,c	;volatile
  2682  000ECC                     L13:
  2683                           
  2684                           ;CurretSense.c: 465: LATAbits.LATA1 = 1;
  2685  000ECC  8289               	bsf	3977,1,c	;volatile
  2686  000ECE  D7FB               	goto	L12
  2687  000ED0                     l229:
  2688                           
  2689                           ;CurretSense.c: 470: LATAbits.LATA4 = 0;
  2690  000ED0  9889               	bcf	3977,4,c	;volatile
  2691  000ED2  D001               	goto	L10
  2692  000ED4                     l230:
  2693                           
  2694                           ;CurretSense.c: 476: LATAbits.LATA4 = 1;
  2695  000ED4  8889               	bsf	3977,4,c	;volatile
  2696  000ED6                     L10:
  2697                           
  2698                           ;CurretSense.c: 477: LATAbits.LATA1 = 0;
  2699  000ED6  9289               	bcf	3977,1,c	;volatile
  2700                           
  2701                           ;CurretSense.c: 478: LATAbits.LATA2 = 0;
  2702  000ED8  9489               	bcf	3977,2,c	;volatile
  2703                           
  2704                           ;CurretSense.c: 479: LATAbits.LATA3 = 1;
  2705  000EDA  8689               	bsf	3977,3,c	;volatile
  2706                           
  2707                           ;CurretSense.c: 480: break;
  2708  000EDC  D027               	goto	l1738
  2709  000EDE                     l1736:
  2710  000EDE  C016  F012         	movff	bcd@value,??_bcd
  2711  000EE2  C017  F013         	movff	bcd@value+1,??_bcd+1
  2712                           
  2713                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2714                           ; Switch size 1, requested type "space"
  2715                           ; Number of cases is 1, Range of values is 0 to 0
  2716                           ; switch strategies available:
  2717                           ; Name         Instructions Cycles
  2718                           ; simple_byte            4     3 (average)
  2719                           ;	Chosen strategy is simple_byte
  2720  000EE6  5013               	movf	??_bcd+1,w,c
  2721  000EE8  0A00               	xorlw	0	; case 0
  2722  000EEA  A4D8               	btfss	status,2,c
  2723  000EEC  D01F               	goto	l1738
  2724                           
  2725                           ; Switch size 1, requested type "space"
  2726                           ; Number of cases is 10, Range of values is 0 to 9
  2727                           ; switch strategies available:
  2728                           ; Name         Instructions Cycles
  2729                           ; simple_byte           31    16 (average)
  2730                           ;	Chosen strategy is simple_byte
  2731  000EEE  5012               	movf	??_bcd,w,c
  2732  000EF0  0A00               	xorlw	0	; case 0
  2733  000EF2  B4D8               	btfsc	status,2,c
  2734  000EF4  D7D4               	goto	l220
  2735  000EF6  0A01               	xorlw	1	; case 1
  2736  000EF8  B4D8               	btfsc	status,2,c
  2737  000EFA  D7D3               	goto	l222
  2738  000EFC  0A03               	xorlw	3	; case 2
  2739  000EFE  B4D8               	btfsc	status,2,c
  2740  000F00  D7D3               	goto	l223
  2741  000F02  0A01               	xorlw	1	; case 3
  2742  000F04  B4D8               	btfsc	status,2,c
  2743  000F06  D7D5               	goto	l224
  2744  000F08  0A07               	xorlw	7	; case 4
  2745  000F0A  B4D8               	btfsc	status,2,c
  2746  000F0C  D7D5               	goto	l225
  2747  000F0E  0A01               	xorlw	1	; case 5
  2748  000F10  B4D8               	btfsc	status,2,c
  2749  000F12  D7D4               	goto	l226
  2750  000F14  0A03               	xorlw	3	; case 6
  2751  000F16  B4D8               	btfsc	status,2,c
  2752  000F18  D7D4               	goto	l227
  2753  000F1A  0A01               	xorlw	1	; case 7
  2754  000F1C  B4D8               	btfsc	status,2,c
  2755  000F1E  D7D5               	goto	l228
  2756  000F20  0A0F               	xorlw	15	; case 8
  2757  000F22  B4D8               	btfsc	status,2,c
  2758  000F24  D7D5               	goto	l229
  2759  000F26  0A01               	xorlw	1	; case 9
  2760  000F28  B4D8               	btfsc	status,2,c
  2761  000F2A  D7D4               	goto	l230
  2762  000F2C                     l1738:
  2763                           
  2764                           ;CurretSense.c: 483: if(uc_digit == 3)
  2765  000F2C  5022               	movf	bcd@uc_digit,w,c
  2766  000F2E  0A03               	xorlw	3
  2767  000F30  A4D8               	btfss	status,2,c
  2768  000F32  D003               	goto	l1742
  2769                           
  2770                           ;CurretSense.c: 484: {
  2771                           ;CurretSense.c: 485: LATCbits.LATC0 = 0;
  2772  000F34  908B               	bcf	3979,0,c	;volatile
  2773                           
  2774                           ;CurretSense.c: 486: LATCbits.LATC0 = 1;
  2775  000F36  808B               	bsf	3979,0,c	;volatile
  2776                           
  2777                           ;CurretSense.c: 487: }
  2778  000F38  D00C               	goto	l1750
  2779  000F3A                     l1742:
  2780                           
  2781                           ;CurretSense.c: 488: else if(uc_digit == 2)
  2782  000F3A  5022               	movf	bcd@uc_digit,w,c
  2783  000F3C  0A02               	xorlw	2
  2784  000F3E  A4D8               	btfss	status,2,c
  2785  000F40  D003               	goto	l1746
  2786                           
  2787                           ;CurretSense.c: 489: {
  2788                           ;CurretSense.c: 490: LATCbits.LATC1 = 0;
  2789  000F42  928B               	bcf	3979,1,c	;volatile
  2790                           
  2791                           ;CurretSense.c: 491: LATCbits.LATC1 = 1;
  2792  000F44  828B               	bsf	3979,1,c	;volatile
  2793                           
  2794                           ;CurretSense.c: 492: }
  2795  000F46  D005               	goto	l1750
  2796  000F48                     l1746:
  2797                           
  2798                           ;CurretSense.c: 493: else if(uc_digit == 1)
  2799  000F48  0422               	decf	bcd@uc_digit,w,c
  2800  000F4A  A4D8               	btfss	status,2,c
  2801  000F4C  D002               	goto	l1750
  2802                           
  2803                           ;CurretSense.c: 494: {
  2804                           ;CurretSense.c: 495: LATCbits.LATC2 = 0;
  2805  000F4E  948B               	bcf	3979,2,c	;volatile
  2806                           
  2807                           ;CurretSense.c: 496: LATCbits.LATC2 = 1;
  2808  000F50  848B               	bsf	3979,2,c	;volatile
  2809  000F52                     l1750:
  2810  000F52  0622               	decf	bcd@uc_digit,f,c
  2811  000F54                     L14:
  2812  000F54  6622               	tstfsz	bcd@uc_digit,c
  2813  000F56  D78A               	goto	l1732
  2814  000F58  0012               	return	
  2815  000F5A                     __end_of_bcd:
  2816                           	opt stack 0
  2817                           tblptru	equ	0xFF8
  2818                           tblptrh	equ	0xFF7
  2819                           tblptrl	equ	0xFF6
  2820                           tablat	equ	0xFF5
  2821                           prodl	equ	0xFF3
  2822                           postinc0	equ	0xFEE
  2823                           wreg	equ	0xFE8
  2824                           postinc1	equ	0xFE6
  2825                           postdec1	equ	0xFE5
  2826                           fsr1l	equ	0xFE1
  2827                           indf2	equ	0xFDF
  2828                           postinc2	equ	0xFDE
  2829                           postdec2	equ	0xFDD
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           status	equ	0xFD8
  2833                           
  2834 ;; *************** function ___lwmod *****************
  2835 ;; Defined at:
  2836 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  dividend        2    0[COMRAM] unsigned int 
  2839 ;;  divisor         2    2[COMRAM] unsigned int 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  counter         1    4[COMRAM] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  2    0[COMRAM] unsigned int 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2851 ;;      Params:         4       0       0       0       0       0       0       0       0
  2852 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2854 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2855 ;;Total ram usage:        5 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_lcd_bcd
  2861 ;;		_bcd
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text14
  2866  0017C6                     __ptext14:
  2867                           	opt stack 0
  2868  0017C6                     ___lwmod:
  2869                           	opt stack 29
  2870                           
  2871                           ;incstack = 0
  2872  0017C6  5004               	movf	___lwmod@divisor+1,w,c
  2873  0017C8  1003               	iorwf	___lwmod@divisor,w,c
  2874  0017CA  B4D8               	btfsc	status,2,c
  2875  0017CC  D018               	goto	l773
  2876  0017CE  0E01               	movlw	1
  2877  0017D0  6E05               	movwf	___lwmod@counter,c
  2878  0017D2  D004               	goto	l1622
  2879  0017D4                     l1620:
  2880  0017D4  90D8               	bcf	status,0,c
  2881  0017D6  3603               	rlcf	___lwmod@divisor,f,c
  2882  0017D8  3604               	rlcf	___lwmod@divisor+1,f,c
  2883  0017DA  2A05               	incf	___lwmod@counter,f,c
  2884  0017DC                     l1622:
  2885  0017DC  AE04               	btfss	___lwmod@divisor+1,7,c
  2886  0017DE  D7FA               	goto	l1620
  2887  0017E0                     l1624:
  2888  0017E0  5003               	movf	___lwmod@divisor,w,c
  2889  0017E2  5C01               	subwf	___lwmod@dividend,w,c
  2890  0017E4  5004               	movf	___lwmod@divisor+1,w,c
  2891  0017E6  5802               	subwfb	___lwmod@dividend+1,w,c
  2892  0017E8  A0D8               	btfss	status,0,c
  2893  0017EA  D004               	goto	l1628
  2894  0017EC  5003               	movf	___lwmod@divisor,w,c
  2895  0017EE  5E01               	subwf	___lwmod@dividend,f,c
  2896  0017F0  5004               	movf	___lwmod@divisor+1,w,c
  2897  0017F2  5A02               	subwfb	___lwmod@dividend+1,f,c
  2898  0017F4                     l1628:
  2899  0017F4  90D8               	bcf	status,0,c
  2900  0017F6  3204               	rrcf	___lwmod@divisor+1,f,c
  2901  0017F8  3203               	rrcf	___lwmod@divisor,f,c
  2902  0017FA  2E05               	decfsz	___lwmod@counter,f,c
  2903  0017FC  D7F1               	goto	l1624
  2904  0017FE                     l773:
  2905  0017FE  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2906  001802  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2907  001806  0012               	return	
  2908  001808                     __end_of___lwmod:
  2909                           	opt stack 0
  2910                           tblptru	equ	0xFF8
  2911                           tblptrh	equ	0xFF7
  2912                           tblptrl	equ	0xFF6
  2913                           tablat	equ	0xFF5
  2914                           prodl	equ	0xFF3
  2915                           postinc0	equ	0xFEE
  2916                           wreg	equ	0xFE8
  2917                           postinc1	equ	0xFE6
  2918                           postdec1	equ	0xFE5
  2919                           fsr1l	equ	0xFE1
  2920                           indf2	equ	0xFDF
  2921                           postinc2	equ	0xFDE
  2922                           postdec2	equ	0xFDD
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function ___lwdiv *****************
  2928 ;; Defined at:
  2929 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  dividend        2    0[COMRAM] unsigned int 
  2932 ;;  divisor         2    2[COMRAM] unsigned int 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  quotient        2    4[COMRAM] unsigned int 
  2935 ;;  counter         1    6[COMRAM] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  2    0[COMRAM] unsigned int 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2945 ;;      Params:         4       0       0       0       0       0       0       0       0
  2946 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2948 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2949 ;;Total ram usage:        7 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_lcd_bcd
  2955 ;;		_bcd
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text15
  2960  001692                     __ptext15:
  2961                           	opt stack 0
  2962  001692                     ___lwdiv:
  2963                           	opt stack 29
  2964                           
  2965                           ;incstack = 0
  2966  001692  0E00               	movlw	0
  2967  001694  6E06               	movwf	___lwdiv@quotient+1,c
  2968  001696  0E00               	movlw	0
  2969  001698  6E05               	movwf	___lwdiv@quotient,c
  2970  00169A  5004               	movf	___lwdiv@divisor+1,w,c
  2971  00169C  1003               	iorwf	___lwdiv@divisor,w,c
  2972  00169E  B4D8               	btfsc	status,2,c
  2973  0016A0  D01C               	goto	l763
  2974  0016A2  0E01               	movlw	1
  2975  0016A4  6E07               	movwf	___lwdiv@counter,c
  2976  0016A6  D004               	goto	l1602
  2977  0016A8                     l1600:
  2978  0016A8  90D8               	bcf	status,0,c
  2979  0016AA  3603               	rlcf	___lwdiv@divisor,f,c
  2980  0016AC  3604               	rlcf	___lwdiv@divisor+1,f,c
  2981  0016AE  2A07               	incf	___lwdiv@counter,f,c
  2982  0016B0                     l1602:
  2983  0016B0  AE04               	btfss	___lwdiv@divisor+1,7,c
  2984  0016B2  D7FA               	goto	l1600
  2985  0016B4                     l1604:
  2986  0016B4  90D8               	bcf	status,0,c
  2987  0016B6  3605               	rlcf	___lwdiv@quotient,f,c
  2988  0016B8  3606               	rlcf	___lwdiv@quotient+1,f,c
  2989  0016BA  5003               	movf	___lwdiv@divisor,w,c
  2990  0016BC  5C01               	subwf	___lwdiv@dividend,w,c
  2991  0016BE  5004               	movf	___lwdiv@divisor+1,w,c
  2992  0016C0  5802               	subwfb	___lwdiv@dividend+1,w,c
  2993  0016C2  A0D8               	btfss	status,0,c
  2994  0016C4  D005               	goto	l1612
  2995  0016C6  5003               	movf	___lwdiv@divisor,w,c
  2996  0016C8  5E01               	subwf	___lwdiv@dividend,f,c
  2997  0016CA  5004               	movf	___lwdiv@divisor+1,w,c
  2998  0016CC  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2999  0016CE  8005               	bsf	___lwdiv@quotient,0,c
  3000  0016D0                     l1612:
  3001  0016D0  90D8               	bcf	status,0,c
  3002  0016D2  3204               	rrcf	___lwdiv@divisor+1,f,c
  3003  0016D4  3203               	rrcf	___lwdiv@divisor,f,c
  3004  0016D6  2E07               	decfsz	___lwdiv@counter,f,c
  3005  0016D8  D7ED               	goto	l1604
  3006  0016DA                     l763:
  3007  0016DA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3008  0016DE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3009  0016E2  0012               	return	
  3010  0016E4                     __end_of___lwdiv:
  3011                           	opt stack 0
  3012                           tblptru	equ	0xFF8
  3013                           tblptrh	equ	0xFF7
  3014                           tblptrl	equ	0xFF6
  3015                           tablat	equ	0xFF5
  3016                           prodl	equ	0xFF3
  3017                           postinc0	equ	0xFEE
  3018                           wreg	equ	0xFE8
  3019                           postinc1	equ	0xFE6
  3020                           postdec1	equ	0xFE5
  3021                           fsr1l	equ	0xFE1
  3022                           indf2	equ	0xFDF
  3023                           postinc2	equ	0xFDE
  3024                           postdec2	equ	0xFDD
  3025                           fsr2h	equ	0xFDA
  3026                           fsr2l	equ	0xFD9
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function _adc_run *****************
  3030 ;; Defined at:
  3031 ;;		line 501 in file "CurretSense.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  2    0[COMRAM] int 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3045 ;;      Params:         2       0       0       0       0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3047 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3048 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3049 ;;Total ram usage:        4 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text16
  3059  0018E4                     __ptext16:
  3060                           	opt stack 0
  3061  0018E4                     _adc_run:
  3062                           	opt stack 30
  3063                           
  3064                           ;CurretSense.c: 503: GODONE = 1;
  3065                           
  3066                           ;incstack = 0
  3067  0018E4  82C2               	bsf	4034,1,c	;volatile
  3068  0018E6                     l239:
  3069  0018E6  B2C2               	btfsc	4034,1,c	;volatile
  3070  0018E8  D7FE               	goto	l239
  3071                           
  3072                           ;CurretSense.c: 505: return ( (ADRESH<<8) | ADRESL );
  3073  0018EA  50C3               	movf	4035,w,c	;volatile
  3074  0018EC  CFC4 F003          	movff	4036,??_adc_run	;volatile
  3075  0018F0  6A04               	clrf	(??_adc_run+1)& (0+255),c
  3076  0018F2  C003  F004         	movff	??_adc_run,??_adc_run+1
  3077  0018F6  6A03               	clrf	??_adc_run,c
  3078  0018F8  1003               	iorwf	??_adc_run,w,c
  3079  0018FA  6E01               	movwf	?_adc_run,c
  3080  0018FC  5004               	movf	??_adc_run+1,w,c
  3081  0018FE  6E02               	movwf	?_adc_run+1,c
  3082  001900  0012               	return	
  3083  001902                     __end_of_adc_run:
  3084                           	opt stack 0
  3085                           tblptru	equ	0xFF8
  3086                           tblptrh	equ	0xFF7
  3087                           tblptrl	equ	0xFF6
  3088                           tablat	equ	0xFF5
  3089                           prodl	equ	0xFF3
  3090                           postinc0	equ	0xFEE
  3091                           wreg	equ	0xFE8
  3092                           postinc1	equ	0xFE6
  3093                           postdec1	equ	0xFE5
  3094                           fsr1l	equ	0xFE1
  3095                           indf2	equ	0xFDF
  3096                           postinc2	equ	0xFDE
  3097                           postdec2	equ	0xFDD
  3098                           fsr2h	equ	0xFDA
  3099                           fsr2l	equ	0xFD9
  3100                           status	equ	0xFD8
  3101                           
  3102 ;; *************** function ___fttol *****************
  3103 ;; Defined at:
  3104 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  f1              3    0[COMRAM] float 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  lval            4   10[COMRAM] unsigned long 
  3109 ;;  exp1            1   14[COMRAM] unsigned char 
  3110 ;;  sign1           1    9[COMRAM] unsigned char 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  4    0[COMRAM] long 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3120 ;;      Params:         4       0       0       0       0       0       0       0       0
  3121 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3122 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3123 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3124 ;;Total ram usage:       15 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text17
  3134  0013F8                     __ptext17:
  3135                           	opt stack 0
  3136  0013F8                     ___fttol:
  3137                           	opt stack 30
  3138                           
  3139                           ;incstack = 0
  3140  0013F8  C003  F005         	movff	___fttol@f1+2,??___fttol
  3141  0013FC  6A06               	clrf	(??___fttol+1)& (0+255),c
  3142  0013FE  6A07               	clrf	(??___fttol+2)& (0+255),c
  3143  001400  3402               	rlcf	___fttol@f1+1,w,c
  3144  001402  3605               	rlcf	??___fttol& (0+255),f,c
  3145  001404  E301               	bnc	u1661
  3146  001406  8006               	bsf	(??___fttol+1)& (0+255),0,c
  3147  001408                     u1661:
  3148  001408  5005               	movf	??___fttol,w,c
  3149  00140A  6E0F               	movwf	___fttol@exp1,c
  3150  00140C  660F               	tstfsz	___fttol@exp1& (0+255),c
  3151  00140E  D001               	goto	l1962
  3152  001410  D038               	goto	u1710
  3153  001412                     l1962:
  3154  001412  0E17               	movlw	23
  3155  001414  6E05               	movwf	??___fttol& (0+255),c
  3156  001416  C001  F006         	movff	___fttol@f1,??___fttol+1
  3157  00141A  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  3158  00141E  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  3159  001422  2805               	incf	??___fttol,w,c
  3160  001424  6E09               	movwf	(??___fttol+4)& (0+255),c
  3161  001426  D004               	goto	u1680
  3162  001428                     u1685:
  3163  001428  90D8               	bcf	status,0,c
  3164  00142A  3208               	rrcf	??___fttol+3,f,c
  3165  00142C  3207               	rrcf	??___fttol+2,f,c
  3166  00142E  3206               	rrcf	??___fttol+1,f,c
  3167  001430                     u1680:
  3168  001430  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  3169  001432  D7FA               	goto	u1685
  3170  001434  5006               	movf	??___fttol+1,w,c
  3171  001436  6E0A               	movwf	___fttol@sign1,c
  3172  001438  8E02               	bsf	___fttol@f1+1,7,c
  3173  00143A  0EFF               	movlw	255
  3174  00143C  1601               	andwf	___fttol@f1,f,c
  3175  00143E  0EFF               	movlw	255
  3176  001440  1602               	andwf	___fttol@f1+1,f,c
  3177  001442  0E00               	movlw	0
  3178  001444  1603               	andwf	___fttol@f1+2,f,c
  3179  001446  5001               	movf	___fttol@f1,w,c
  3180  001448  6E0B               	movwf	___fttol@lval,c
  3181  00144A  5002               	movf	___fttol@f1+1,w,c
  3182  00144C  6E0C               	movwf	___fttol@lval+1,c
  3183  00144E  5003               	movf	___fttol@f1+2,w,c
  3184  001450  6E0D               	movwf	___fttol@lval+2,c
  3185  001452  6A0E               	clrf	___fttol@lval+3,c
  3186  001454  0E8E               	movlw	142
  3187  001456  5E0F               	subwf	___fttol@exp1,f,c
  3188  001458  AE0F               	btfss	___fttol@exp1,7,c
  3189  00145A  D010               	goto	l1984
  3190  00145C  500F               	movf	___fttol@exp1,w,c
  3191  00145E  0A80               	xorlw	128
  3192  001460  6E05               	movwf	??___fttol& (0+255),c
  3193  001462  0EF1               	movlw	241
  3194  001464  0A80               	xorlw	128
  3195  001466  5C05               	subwf	??___fttol,w,c
  3196  001468  A0D8               	btfss	status,0,c
  3197  00146A  D00B               	goto	u1710
  3198  00146C                     l1980:
  3199  00146C  90D8               	bcf	status,0,c
  3200  00146E  320E               	rrcf	___fttol@lval+3,f,c
  3201  001470  320D               	rrcf	___fttol@lval+2,f,c
  3202  001472  320C               	rrcf	___fttol@lval+1,f,c
  3203  001474  320B               	rrcf	___fttol@lval,f,c
  3204  001476  3E0F               	incfsz	___fttol@exp1,f,c
  3205  001478  D7F9               	goto	l1980
  3206  00147A  D014               	goto	l1994
  3207  00147C                     l1984:
  3208  00147C  0E17               	movlw	23
  3209  00147E  640F               	cpfsgt	___fttol@exp1,c
  3210  001480  D00F               	goto	l1992
  3211  001482                     u1710:
  3212  001482  0E00               	movlw	0
  3213  001484  6E01               	movwf	?___fttol,c
  3214  001486  0E00               	movlw	0
  3215  001488  6E02               	movwf	?___fttol+1,c
  3216  00148A  0E00               	movlw	0
  3217  00148C  6E03               	movwf	?___fttol+2,c
  3218  00148E  0E00               	movlw	0
  3219  001490  6E04               	movwf	?___fttol+3,c
  3220  001492  D01B               	goto	l661
  3221  001494                     l1990:
  3222  001494  90D8               	bcf	status,0,c
  3223  001496  360B               	rlcf	___fttol@lval,f,c
  3224  001498  360C               	rlcf	___fttol@lval+1,f,c
  3225  00149A  360D               	rlcf	___fttol@lval+2,f,c
  3226  00149C  360E               	rlcf	___fttol@lval+3,f,c
  3227  00149E  060F               	decf	___fttol@exp1,f,c
  3228  0014A0                     l1992:
  3229  0014A0  660F               	tstfsz	___fttol@exp1,c
  3230  0014A2  D7F8               	goto	l1990
  3231  0014A4                     l1994:
  3232  0014A4  500A               	movf	___fttol@sign1,w,c
  3233  0014A6  B4D8               	btfsc	status,2,c
  3234  0014A8  D008               	goto	l1998
  3235  0014AA  1E0E               	comf	___fttol@lval+3,f,c
  3236  0014AC  1E0D               	comf	___fttol@lval+2,f,c
  3237  0014AE  1E0C               	comf	___fttol@lval+1,f,c
  3238  0014B0  6C0B               	negf	___fttol@lval,c
  3239  0014B2  0E00               	movlw	0
  3240  0014B4  220C               	addwfc	___fttol@lval+1,f,c
  3241  0014B6  220D               	addwfc	___fttol@lval+2,f,c
  3242  0014B8  220E               	addwfc	___fttol@lval+3,f,c
  3243  0014BA                     l1998:
  3244  0014BA  C00B  F001         	movff	___fttol@lval,?___fttol
  3245  0014BE  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  3246  0014C2  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  3247  0014C6  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  3248  0014CA                     l661:
  3249  0014CA  0012               	return	
  3250  0014CC                     __end_of___fttol:
  3251                           	opt stack 0
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           prodl	equ	0xFF3
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           postinc1	equ	0xFE6
  3260                           postdec1	equ	0xFE5
  3261                           fsr1l	equ	0xFE1
  3262                           indf2	equ	0xFDF
  3263                           postinc2	equ	0xFDE
  3264                           postdec2	equ	0xFDD
  3265                           fsr2h	equ	0xFDA
  3266                           fsr2l	equ	0xFD9
  3267                           status	equ	0xFD8
  3268                           
  3269 ;; *************** function ___ftneg *****************
  3270 ;; Defined at:
  3271 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  f1              3   12[COMRAM] float 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  3   12[COMRAM] float 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3285 ;;      Params:         3       0       0       0       0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3288 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3289 ;;Total ram usage:        3 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text18
  3299  001860                     __ptext18:
  3300                           	opt stack 0
  3301  001860                     ___ftneg:
  3302                           	opt stack 30
  3303                           
  3304                           ;incstack = 0
  3305  001860  0E7F               	movlw	127
  3306  001862  140F               	andwf	___ftneg@f1+2,w,c
  3307  001864  100E               	iorwf	___ftneg@f1+1,w,c
  3308  001866  100D               	iorwf	___ftneg@f1,w,c
  3309  001868  B4D8               	btfsc	status,2,c
  3310  00186A  D006               	goto	l651
  3311  00186C  0E00               	movlw	0
  3312  00186E  1A0D               	xorwf	___ftneg@f1,f,c
  3313  001870  0E00               	movlw	0
  3314  001872  1A0E               	xorwf	___ftneg@f1+1,f,c
  3315  001874  0E80               	movlw	128
  3316  001876  1A0F               	xorwf	___ftneg@f1+2,f,c
  3317  001878                     l651:
  3318  001878  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  3319  00187C  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  3320  001880  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  3321  001884  0012               	return	
  3322  001886                     __end_of___ftneg:
  3323                           	opt stack 0
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           prodl	equ	0xFF3
  3329                           postinc0	equ	0xFEE
  3330                           wreg	equ	0xFE8
  3331                           postinc1	equ	0xFE6
  3332                           postdec1	equ	0xFE5
  3333                           fsr1l	equ	0xFE1
  3334                           indf2	equ	0xFDF
  3335                           postinc2	equ	0xFDE
  3336                           postdec2	equ	0xFDD
  3337                           fsr2h	equ	0xFDA
  3338                           fsr2l	equ	0xFD9
  3339                           status	equ	0xFD8
  3340                           
  3341 ;; *************** function ___ftmul *****************
  3342 ;; Defined at:
  3343 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  f1              3    8[COMRAM] float 
  3346 ;;  f2              3   11[COMRAM] float 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  3349 ;;  sign            1   22[COMRAM] unsigned char 
  3350 ;;  cntr            1   21[COMRAM] unsigned char 
  3351 ;;  exp             1   17[COMRAM] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  3    8[COMRAM] float 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3361 ;;      Params:         6       0       0       0       0       0       0       0       0
  3362 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3363 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3364 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3365 ;;Total ram usage:       15 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    1
  3368 ;; This function calls:
  3369 ;;		___ftpack
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text19
  3376  00123E                     __ptext19:
  3377                           	opt stack 0
  3378  00123E                     ___ftmul:
  3379                           	opt stack 29
  3380                           
  3381                           ;incstack = 0
  3382  00123E  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  3383  001242  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3384  001244  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3385  001246  340A               	rlcf	___ftmul@f1+1,w,c
  3386  001248  360F               	rlcf	??___ftmul& (0+255),f,c
  3387  00124A  E301               	bnc	u1551
  3388  00124C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3389  00124E                     u1551:
  3390  00124E  500F               	movf	??___ftmul,w,c
  3391  001250  6E12               	movwf	___ftmul@exp,c
  3392  001252  6612               	tstfsz	___ftmul@exp& (0+255),c
  3393  001254  D001               	goto	l1880
  3394  001256  D00C               	goto	u1580
  3395  001258                     l1880:
  3396  001258  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  3397  00125C  6A10               	clrf	(??___ftmul+1)& (0+255),c
  3398  00125E  6A11               	clrf	(??___ftmul+2)& (0+255),c
  3399  001260  340D               	rlcf	___ftmul@f2+1,w,c
  3400  001262  360F               	rlcf	??___ftmul& (0+255),f,c
  3401  001264  E301               	bnc	u1571
  3402  001266  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  3403  001268                     u1571:
  3404  001268  500F               	movf	??___ftmul,w,c
  3405  00126A  6E17               	movwf	___ftmul@sign,c
  3406  00126C  6617               	tstfsz	___ftmul@sign& (0+255),c
  3407  00126E  D007               	goto	l1886
  3408  001270                     u1580:
  3409  001270  0E00               	movlw	0
  3410  001272  6E09               	movwf	?___ftmul,c
  3411  001274  0E00               	movlw	0
  3412  001276  6E0A               	movwf	?___ftmul+1,c
  3413  001278  0E00               	movlw	0
  3414  00127A  6E0B               	movwf	?___ftmul+2,c
  3415  00127C  D051               	goto	l641
  3416  00127E                     l1886:
  3417  00127E  5017               	movf	___ftmul@sign,w,c
  3418  001280  0F7B               	addlw	123
  3419  001282  2612               	addwf	___ftmul@exp,f,c
  3420  001284  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  3421  001288  500E               	movf	___ftmul@f2+2,w,c
  3422  00128A  1A17               	xorwf	___ftmul@sign,f,c
  3423  00128C  0E80               	movlw	128
  3424  00128E  1617               	andwf	___ftmul@sign,f,c
  3425  001290  8E0A               	bsf	___ftmul@f1+1,7,c
  3426  001292  8E0D               	bsf	___ftmul@f2+1,7,c
  3427  001294  0EFF               	movlw	255
  3428  001296  160C               	andwf	___ftmul@f2,f,c
  3429  001298  0EFF               	movlw	255
  3430  00129A  160D               	andwf	___ftmul@f2+1,f,c
  3431  00129C  0E00               	movlw	0
  3432  00129E  160E               	andwf	___ftmul@f2+2,f,c
  3433  0012A0  0E00               	movlw	0
  3434  0012A2  6E13               	movwf	___ftmul@f3_as_product,c
  3435  0012A4  0E00               	movlw	0
  3436  0012A6  6E14               	movwf	___ftmul@f3_as_product+1,c
  3437  0012A8  0E00               	movlw	0
  3438  0012AA  6E15               	movwf	___ftmul@f3_as_product+2,c
  3439  0012AC  0E07               	movlw	7
  3440  0012AE  6E16               	movwf	___ftmul@cntr,c
  3441  0012B0                     l1900:
  3442  0012B0  A009               	btfss	___ftmul@f1,0,c
  3443  0012B2  D006               	goto	l1904
  3444  0012B4  500C               	movf	___ftmul@f2,w,c
  3445  0012B6  2613               	addwf	___ftmul@f3_as_product,f,c
  3446  0012B8  500D               	movf	___ftmul@f2+1,w,c
  3447  0012BA  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3448  0012BC  500E               	movf	___ftmul@f2+2,w,c
  3449  0012BE  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3450  0012C0                     l1904:
  3451  0012C0  90D8               	bcf	status,0,c
  3452  0012C2  320B               	rrcf	___ftmul@f1+2,f,c
  3453  0012C4  320A               	rrcf	___ftmul@f1+1,f,c
  3454  0012C6  3209               	rrcf	___ftmul@f1,f,c
  3455  0012C8  90D8               	bcf	status,0,c
  3456  0012CA  360C               	rlcf	___ftmul@f2,f,c
  3457  0012CC  360D               	rlcf	___ftmul@f2+1,f,c
  3458  0012CE  360E               	rlcf	___ftmul@f2+2,f,c
  3459  0012D0  2E16               	decfsz	___ftmul@cntr,f,c
  3460  0012D2  D7EE               	goto	l1900
  3461  0012D4  0E09               	movlw	9
  3462  0012D6  6E16               	movwf	___ftmul@cntr,c
  3463  0012D8                     l1910:
  3464  0012D8  A009               	btfss	___ftmul@f1,0,c
  3465  0012DA  D006               	goto	l1914
  3466  0012DC  500C               	movf	___ftmul@f2,w,c
  3467  0012DE  2613               	addwf	___ftmul@f3_as_product,f,c
  3468  0012E0  500D               	movf	___ftmul@f2+1,w,c
  3469  0012E2  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  3470  0012E4  500E               	movf	___ftmul@f2+2,w,c
  3471  0012E6  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  3472  0012E8                     l1914:
  3473  0012E8  90D8               	bcf	status,0,c
  3474  0012EA  320B               	rrcf	___ftmul@f1+2,f,c
  3475  0012EC  320A               	rrcf	___ftmul@f1+1,f,c
  3476  0012EE  3209               	rrcf	___ftmul@f1,f,c
  3477  0012F0  90D8               	bcf	status,0,c
  3478  0012F2  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  3479  0012F4  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  3480  0012F6  3213               	rrcf	___ftmul@f3_as_product,f,c
  3481  0012F8  2E16               	decfsz	___ftmul@cntr,f,c
  3482  0012FA  D7EE               	goto	l1910
  3483  0012FC  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3484  001300  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3485  001304  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3486  001308  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  3487  00130C  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  3488  001310  EC66  F00A         	call	___ftpack	;wreg free
  3489  001314  C001  F009         	movff	?___ftpack,?___ftmul
  3490  001318  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  3491  00131C  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  3492  001320                     l641:
  3493  001320  0012               	return	
  3494  001322                     __end_of___ftmul:
  3495                           	opt stack 0
  3496                           tblptru	equ	0xFF8
  3497                           tblptrh	equ	0xFF7
  3498                           tblptrl	equ	0xFF6
  3499                           tablat	equ	0xFF5
  3500                           prodl	equ	0xFF3
  3501                           postinc0	equ	0xFEE
  3502                           wreg	equ	0xFE8
  3503                           postinc1	equ	0xFE6
  3504                           postdec1	equ	0xFE5
  3505                           fsr1l	equ	0xFE1
  3506                           indf2	equ	0xFDF
  3507                           postinc2	equ	0xFDE
  3508                           postdec2	equ	0xFDD
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function ___ftge *****************
  3514 ;; Defined at:
  3515 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftge.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  ff1             3   12[COMRAM] float 
  3518 ;;  ff2             3   15[COMRAM] float 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;		None               void
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3530 ;;      Params:         6       0       0       0       0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3532 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3533 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3534 ;;Total ram usage:        9 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text20
  3544  001574                     __ptext20:
  3545                           	opt stack 0
  3546  001574                     ___ftge:
  3547                           	opt stack 30
  3548                           
  3549                           ;incstack = 0
  3550  001574  AE0F               	btfss	___ftge@ff1+2,7,c
  3551  001576  D016               	goto	l1938
  3552  001578  C00D  F013         	movff	___ftge@ff1,??___ftge
  3553  00157C  C00E  F014         	movff	___ftge@ff1+1,??___ftge+1
  3554  001580  C00F  F015         	movff	___ftge@ff1+2,??___ftge+2
  3555  001584  1E13               	comf	??___ftge,f,c
  3556  001586  1E14               	comf	??___ftge+1,f,c
  3557  001588  1E15               	comf	??___ftge+2,f,c
  3558  00158A  2A13               	incf	??___ftge,f,c
  3559  00158C  0E00               	movlw	0
  3560  00158E  2214               	addwfc	??___ftge+1,f,c
  3561  001590  2215               	addwfc	??___ftge+2,f,c
  3562  001592  0E00               	movlw	0
  3563  001594  2413               	addwf	??___ftge,w,c
  3564  001596  6E0D               	movwf	___ftge@ff1,c
  3565  001598  0E00               	movlw	0
  3566  00159A  2014               	addwfc	??___ftge+1,w,c
  3567  00159C  6E0E               	movwf	___ftge@ff1+1,c
  3568  00159E  0E80               	movlw	128
  3569  0015A0  2015               	addwfc	??___ftge+2,w,c
  3570  0015A2  6E0F               	movwf	___ftge@ff1+2,c
  3571  0015A4                     l1938:
  3572  0015A4  AE12               	btfss	___ftge@ff2+2,7,c
  3573  0015A6  D016               	goto	l1942
  3574  0015A8  C010  F013         	movff	___ftge@ff2,??___ftge
  3575  0015AC  C011  F014         	movff	___ftge@ff2+1,??___ftge+1
  3576  0015B0  C012  F015         	movff	___ftge@ff2+2,??___ftge+2
  3577  0015B4  1E13               	comf	??___ftge,f,c
  3578  0015B6  1E14               	comf	??___ftge+1,f,c
  3579  0015B8  1E15               	comf	??___ftge+2,f,c
  3580  0015BA  2A13               	incf	??___ftge,f,c
  3581  0015BC  0E00               	movlw	0
  3582  0015BE  2214               	addwfc	??___ftge+1,f,c
  3583  0015C0  2215               	addwfc	??___ftge+2,f,c
  3584  0015C2  0E00               	movlw	0
  3585  0015C4  2413               	addwf	??___ftge,w,c
  3586  0015C6  6E10               	movwf	___ftge@ff2,c
  3587  0015C8  0E00               	movlw	0
  3588  0015CA  2014               	addwfc	??___ftge+1,w,c
  3589  0015CC  6E11               	movwf	___ftge@ff2+1,c
  3590  0015CE  0E80               	movlw	128
  3591  0015D0  2015               	addwfc	??___ftge+2,w,c
  3592  0015D2  6E12               	movwf	___ftge@ff2+2,c
  3593  0015D4                     l1942:
  3594  0015D4  0E00               	movlw	0
  3595  0015D6  1A0D               	xorwf	___ftge@ff1,f,c
  3596  0015D8  0E00               	movlw	0
  3597  0015DA  1A0E               	xorwf	___ftge@ff1+1,f,c
  3598  0015DC  0E80               	movlw	128
  3599  0015DE  1A0F               	xorwf	___ftge@ff1+2,f,c
  3600  0015E0  0E00               	movlw	0
  3601  0015E2  1A10               	xorwf	___ftge@ff2,f,c
  3602  0015E4  0E00               	movlw	0
  3603  0015E6  1A11               	xorwf	___ftge@ff2+1,f,c
  3604  0015E8  0E80               	movlw	128
  3605  0015EA  1A12               	xorwf	___ftge@ff2+2,f,c
  3606  0015EC  5010               	movf	___ftge@ff2,w,c
  3607  0015EE  5C0D               	subwf	___ftge@ff1,w,c
  3608  0015F0  5011               	movf	___ftge@ff2+1,w,c
  3609  0015F2  580E               	subwfb	___ftge@ff1+1,w,c
  3610  0015F4  5012               	movf	___ftge@ff2+2,w,c
  3611  0015F6  580F               	subwfb	___ftge@ff1+2,w,c
  3612  0015F8  B0D8               	btfsc	status,0,c
  3613  0015FA  D002               	goto	l1948
  3614  0015FC  90D8               	bcf	status,0,c
  3615  0015FE  D001               	goto	l635
  3616  001600                     l1948:
  3617  001600  80D8               	bsf	status,0,c
  3618  001602                     l635:
  3619  001602  0012               	return	
  3620  001604                     __end_of___ftge:
  3621                           	opt stack 0
  3622                           tblptru	equ	0xFF8
  3623                           tblptrh	equ	0xFF7
  3624                           tblptrl	equ	0xFF6
  3625                           tablat	equ	0xFF5
  3626                           prodl	equ	0xFF3
  3627                           postinc0	equ	0xFEE
  3628                           wreg	equ	0xFE8
  3629                           postinc1	equ	0xFE6
  3630                           postdec1	equ	0xFE5
  3631                           fsr1l	equ	0xFE1
  3632                           indf2	equ	0xFDF
  3633                           postinc2	equ	0xFDE
  3634                           postdec2	equ	0xFDD
  3635                           fsr2h	equ	0xFDA
  3636                           fsr2l	equ	0xFD9
  3637                           status	equ	0xFD8
  3638                           
  3639 ;; *************** function ___ftdiv *****************
  3640 ;; Defined at:
  3641 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftdiv.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  f1              3   23[COMRAM] float 
  3644 ;;  f2              3   26[COMRAM] float 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  f3              3   33[COMRAM] float 
  3647 ;;  sign            1   37[COMRAM] unsigned char 
  3648 ;;  exp             1   36[COMRAM] unsigned char 
  3649 ;;  cntr            1   32[COMRAM] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  3   23[COMRAM] float 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3659 ;;      Params:         6       0       0       0       0       0       0       0       0
  3660 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3661 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3662 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3663 ;;Total ram usage:       15 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    1
  3666 ;; This function calls:
  3667 ;;		___ftpack
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text21
  3674  001322                     __ptext21:
  3675                           	opt stack 0
  3676  001322                     ___ftdiv:
  3677                           	opt stack 29
  3678                           
  3679                           ;incstack = 0
  3680  001322  C01A  F01E         	movff	___ftdiv@f1+2,??___ftdiv
  3681  001326  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
  3682  001328  6A20               	clrf	(??___ftdiv+2)& (0+255),c
  3683  00132A  3419               	rlcf	___ftdiv@f1+1,w,c
  3684  00132C  361E               	rlcf	??___ftdiv& (0+255),f,c
  3685  00132E  E301               	bnc	u1501
  3686  001330  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
  3687  001332                     u1501:
  3688  001332  501E               	movf	??___ftdiv,w,c
  3689  001334  6E25               	movwf	___ftdiv@exp,c
  3690  001336  6625               	tstfsz	___ftdiv@exp& (0+255),c
  3691  001338  D001               	goto	l1834
  3692  00133A  D00C               	goto	u1530
  3693  00133C                     l1834:
  3694  00133C  C01D  F01E         	movff	___ftdiv@f2+2,??___ftdiv
  3695  001340  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
  3696  001342  6A20               	clrf	(??___ftdiv+2)& (0+255),c
  3697  001344  341C               	rlcf	___ftdiv@f2+1,w,c
  3698  001346  361E               	rlcf	??___ftdiv& (0+255),f,c
  3699  001348  E301               	bnc	u1521
  3700  00134A  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
  3701  00134C                     u1521:
  3702  00134C  501E               	movf	??___ftdiv,w,c
  3703  00134E  6E26               	movwf	___ftdiv@sign,c
  3704  001350  6626               	tstfsz	___ftdiv@sign& (0+255),c
  3705  001352  D007               	goto	l1840
  3706  001354                     u1530:
  3707  001354  0E00               	movlw	0
  3708  001356  6E18               	movwf	?___ftdiv,c
  3709  001358  0E00               	movlw	0
  3710  00135A  6E19               	movwf	?___ftdiv+1,c
  3711  00135C  0E00               	movlw	0
  3712  00135E  6E1A               	movwf	?___ftdiv+2,c
  3713  001360  D04A               	goto	l626
  3714  001362                     l1840:
  3715  001362  0E00               	movlw	0
  3716  001364  6E22               	movwf	___ftdiv@f3,c
  3717  001366  0E00               	movlw	0
  3718  001368  6E23               	movwf	___ftdiv@f3+1,c
  3719  00136A  0E00               	movlw	0
  3720  00136C  6E24               	movwf	___ftdiv@f3+2,c
  3721  00136E  5026               	movf	___ftdiv@sign,w,c
  3722  001370  0F89               	addlw	137
  3723  001372  5E25               	subwf	___ftdiv@exp,f,c
  3724  001374  C01A  F026         	movff	___ftdiv@f1+2,___ftdiv@sign
  3725  001378  501D               	movf	___ftdiv@f2+2,w,c
  3726  00137A  1A26               	xorwf	___ftdiv@sign,f,c
  3727  00137C  0E80               	movlw	128
  3728  00137E  1626               	andwf	___ftdiv@sign,f,c
  3729  001380  8E19               	bsf	___ftdiv@f1+1,7,c
  3730  001382  0EFF               	movlw	255
  3731  001384  1618               	andwf	___ftdiv@f1,f,c
  3732  001386  0EFF               	movlw	255
  3733  001388  1619               	andwf	___ftdiv@f1+1,f,c
  3734  00138A  0E00               	movlw	0
  3735  00138C  161A               	andwf	___ftdiv@f1+2,f,c
  3736  00138E  8E1C               	bsf	___ftdiv@f2+1,7,c
  3737  001390  0EFF               	movlw	255
  3738  001392  161B               	andwf	___ftdiv@f2,f,c
  3739  001394  0EFF               	movlw	255
  3740  001396  161C               	andwf	___ftdiv@f2+1,f,c
  3741  001398  0E00               	movlw	0
  3742  00139A  161D               	andwf	___ftdiv@f2+2,f,c
  3743  00139C  0E18               	movlw	24
  3744  00139E  6E21               	movwf	___ftdiv@cntr,c
  3745  0013A0                     l1860:
  3746  0013A0  90D8               	bcf	status,0,c
  3747  0013A2  3622               	rlcf	___ftdiv@f3,f,c
  3748  0013A4  3623               	rlcf	___ftdiv@f3+1,f,c
  3749  0013A6  3624               	rlcf	___ftdiv@f3+2,f,c
  3750  0013A8  501B               	movf	___ftdiv@f2,w,c
  3751  0013AA  5C18               	subwf	___ftdiv@f1,w,c
  3752  0013AC  501C               	movf	___ftdiv@f2+1,w,c
  3753  0013AE  5819               	subwfb	___ftdiv@f1+1,w,c
  3754  0013B0  501D               	movf	___ftdiv@f2+2,w,c
  3755  0013B2  581A               	subwfb	___ftdiv@f1+2,w,c
  3756  0013B4  A0D8               	btfss	status,0,c
  3757  0013B6  D007               	goto	l629
  3758  0013B8  501B               	movf	___ftdiv@f2,w,c
  3759  0013BA  5E18               	subwf	___ftdiv@f1,f,c
  3760  0013BC  501C               	movf	___ftdiv@f2+1,w,c
  3761  0013BE  5A19               	subwfb	___ftdiv@f1+1,f,c
  3762  0013C0  501D               	movf	___ftdiv@f2+2,w,c
  3763  0013C2  5A1A               	subwfb	___ftdiv@f1+2,f,c
  3764  0013C4  8022               	bsf	___ftdiv@f3,0,c
  3765  0013C6                     l629:
  3766  0013C6  90D8               	bcf	status,0,c
  3767  0013C8  3618               	rlcf	___ftdiv@f1,f,c
  3768  0013CA  3619               	rlcf	___ftdiv@f1+1,f,c
  3769  0013CC  361A               	rlcf	___ftdiv@f1+2,f,c
  3770  0013CE  2E21               	decfsz	___ftdiv@cntr,f,c
  3771  0013D0  D7E7               	goto	l1860
  3772  0013D2  C022  F001         	movff	___ftdiv@f3,___ftpack@arg
  3773  0013D6  C023  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3774  0013DA  C024  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3775  0013DE  C025  F004         	movff	___ftdiv@exp,___ftpack@exp
  3776  0013E2  C026  F005         	movff	___ftdiv@sign,___ftpack@sign
  3777  0013E6  EC66  F00A         	call	___ftpack	;wreg free
  3778  0013EA  C001  F018         	movff	?___ftpack,?___ftdiv
  3779  0013EE  C002  F019         	movff	?___ftpack+1,?___ftdiv+1
  3780  0013F2  C003  F01A         	movff	?___ftpack+2,?___ftdiv+2
  3781  0013F6                     l626:
  3782  0013F6  0012               	return	
  3783  0013F8                     __end_of___ftdiv:
  3784                           	opt stack 0
  3785                           tblptru	equ	0xFF8
  3786                           tblptrh	equ	0xFF7
  3787                           tblptrl	equ	0xFF6
  3788                           tablat	equ	0xFF5
  3789                           prodl	equ	0xFF3
  3790                           postinc0	equ	0xFEE
  3791                           wreg	equ	0xFE8
  3792                           postinc1	equ	0xFE6
  3793                           postdec1	equ	0xFE5
  3794                           fsr1l	equ	0xFE1
  3795                           indf2	equ	0xFDF
  3796                           postinc2	equ	0xFDE
  3797                           postdec2	equ	0xFDD
  3798                           fsr2h	equ	0xFDA
  3799                           fsr2l	equ	0xFD9
  3800                           status	equ	0xFD8
  3801                           
  3802 ;; *************** function ___ftadd *****************
  3803 ;; Defined at:
  3804 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  f1              3   15[COMRAM] float 
  3807 ;;  f2              3   18[COMRAM] float 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  exp1            1   26[COMRAM] unsigned char 
  3810 ;;  exp2            1   25[COMRAM] unsigned char 
  3811 ;;  sign            1   24[COMRAM] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  3   15[COMRAM] float 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3821 ;;      Params:         6       0       0       0       0       0       0       0       0
  3822 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3823 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3824 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3825 ;;Total ram usage:       12 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    1
  3828 ;; This function calls:
  3829 ;;		___ftpack
  3830 ;; This function is called by:
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text22
  3836  000F5A                     __ptext22:
  3837                           	opt stack 0
  3838  000F5A                     ___ftadd:
  3839                           	opt stack 29
  3840                           
  3841                           ;incstack = 0
  3842  000F5A  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  3843  000F5E  6A17               	clrf	(??___ftadd+1)& (0+255),c
  3844  000F60  6A18               	clrf	(??___ftadd+2)& (0+255),c
  3845  000F62  3411               	rlcf	___ftadd@f1+1,w,c
  3846  000F64  3616               	rlcf	??___ftadd& (0+255),f,c
  3847  000F66  E301               	bnc	u1291
  3848  000F68  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  3849  000F6A                     u1291:
  3850  000F6A  5016               	movf	??___ftadd,w,c
  3851  000F6C  6E1B               	movwf	___ftadd@exp1,c
  3852  000F6E  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  3853  000F72  6A17               	clrf	(??___ftadd+1)& (0+255),c
  3854  000F74  6A18               	clrf	(??___ftadd+2)& (0+255),c
  3855  000F76  3414               	rlcf	___ftadd@f2+1,w,c
  3856  000F78  3616               	rlcf	??___ftadd& (0+255),f,c
  3857  000F7A  E301               	bnc	u1301
  3858  000F7C  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  3859  000F7E                     u1301:
  3860  000F7E  5016               	movf	??___ftadd,w,c
  3861  000F80  6E1A               	movwf	___ftadd@exp2,c
  3862  000F82  501B               	movf	___ftadd@exp1,w,c
  3863  000F84  B4D8               	btfsc	status,2,c
  3864  000F86  D00C               	goto	l594
  3865  000F88  501A               	movf	___ftadd@exp2,w,c
  3866  000F8A  5C1B               	subwf	___ftadd@exp1,w,c
  3867  000F8C  B0D8               	btfsc	status,0,c
  3868  000F8E  D00F               	goto	l1766
  3869  000F90  501B               	movf	___ftadd@exp1,w,c
  3870  000F92  0800               	sublw	0
  3871  000F94  241A               	addwf	___ftadd@exp2,w,c
  3872  000F96  6E16               	movwf	??___ftadd& (0+255),c
  3873  000F98  0E19               	movlw	25
  3874  000F9A  5C16               	subwf	??___ftadd,w,c
  3875  000F9C  A0D8               	btfss	status,0,c
  3876  000F9E  D007               	goto	l1766
  3877  000FA0                     l594:
  3878  000FA0  C013  F010         	movff	___ftadd@f2,?___ftadd
  3879  000FA4  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  3880  000FA8  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  3881  000FAC  D0AB               	goto	l595
  3882  000FAE                     l1766:
  3883  000FAE  501A               	movf	___ftadd@exp2,w,c
  3884  000FB0  B4D8               	btfsc	status,2,c
  3885  000FB2  D00C               	goto	l598
  3886  000FB4  501B               	movf	___ftadd@exp1,w,c
  3887  000FB6  5C1A               	subwf	___ftadd@exp2,w,c
  3888  000FB8  B0D8               	btfsc	status,0,c
  3889  000FBA  D00F               	goto	l1772
  3890  000FBC  501A               	movf	___ftadd@exp2,w,c
  3891  000FBE  0800               	sublw	0
  3892  000FC0  241B               	addwf	___ftadd@exp1,w,c
  3893  000FC2  6E16               	movwf	??___ftadd& (0+255),c
  3894  000FC4  0E19               	movlw	25
  3895  000FC6  5C16               	subwf	??___ftadd,w,c
  3896  000FC8  A0D8               	btfss	status,0,c
  3897  000FCA  D007               	goto	l1772
  3898  000FCC                     l598:
  3899  000FCC  C010  F010         	movff	___ftadd@f1,?___ftadd
  3900  000FD0  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  3901  000FD4  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  3902  000FD8  D095               	goto	l595
  3903  000FDA                     l1772:
  3904  000FDA  0E06               	movlw	6
  3905  000FDC  6E19               	movwf	___ftadd@sign,c
  3906  000FDE  BE12               	btfsc	___ftadd@f1+2,7,c
  3907  000FE0  8E19               	bsf	___ftadd@sign,7,c
  3908  000FE2  BE15               	btfsc	___ftadd@f2+2,7,c
  3909  000FE4  8C19               	bsf	___ftadd@sign,6,c
  3910  000FE6  8E11               	bsf	___ftadd@f1+1,7,c
  3911  000FE8  0EFF               	movlw	255
  3912  000FEA  1610               	andwf	___ftadd@f1,f,c
  3913  000FEC  0EFF               	movlw	255
  3914  000FEE  1611               	andwf	___ftadd@f1+1,f,c
  3915  000FF0  0E00               	movlw	0
  3916  000FF2  1612               	andwf	___ftadd@f1+2,f,c
  3917  000FF4  8E14               	bsf	___ftadd@f2+1,7,c
  3918  000FF6  0EFF               	movlw	255
  3919  000FF8  1613               	andwf	___ftadd@f2,f,c
  3920  000FFA  0EFF               	movlw	255
  3921  000FFC  1614               	andwf	___ftadd@f2+1,f,c
  3922  000FFE  0E00               	movlw	0
  3923  001000  1615               	andwf	___ftadd@f2+2,f,c
  3924  001002  501A               	movf	___ftadd@exp2,w,c
  3925  001004  5C1B               	subwf	___ftadd@exp1,w,c
  3926  001006  B0D8               	btfsc	status,0,c
  3927  001008  D01A               	goto	l1798
  3928  00100A                     l1788:
  3929  00100A  90D8               	bcf	status,0,c
  3930  00100C  3613               	rlcf	___ftadd@f2,f,c
  3931  00100E  3614               	rlcf	___ftadd@f2+1,f,c
  3932  001010  3615               	rlcf	___ftadd@f2+2,f,c
  3933  001012  061A               	decf	___ftadd@exp2,f,c
  3934  001014  501A               	movf	___ftadd@exp2,w,c
  3935  001016  181B               	xorwf	___ftadd@exp1,w,c
  3936  001018  B4D8               	btfsc	status,2,c
  3937  00101A  D00D               	goto	l1796
  3938  00101C  0619               	decf	___ftadd@sign,f,c
  3939  00101E  C019  F016         	movff	___ftadd@sign,??___ftadd
  3940  001022  0E07               	movlw	7
  3941  001024  1616               	andwf	??___ftadd,f,c
  3942  001026  B4D8               	btfsc	status,2,c
  3943  001028  D006               	goto	l1796
  3944  00102A  D7EF               	goto	l1788
  3945  00102C                     l1794:
  3946  00102C  90D8               	bcf	status,0,c
  3947  00102E  3212               	rrcf	___ftadd@f1+2,f,c
  3948  001030  3211               	rrcf	___ftadd@f1+1,f,c
  3949  001032  3210               	rrcf	___ftadd@f1,f,c
  3950  001034  2A1B               	incf	___ftadd@exp1,f,c
  3951  001036                     l1796:
  3952  001036  501A               	movf	___ftadd@exp2,w,c
  3953  001038  621B               	cpfseq	___ftadd@exp1,c
  3954  00103A  D7F8               	goto	l1794
  3955  00103C  D01D               	goto	l609
  3956  00103E                     l1798:
  3957  00103E  501B               	movf	___ftadd@exp1,w,c
  3958  001040  5C1A               	subwf	___ftadd@exp2,w,c
  3959  001042  B0D8               	btfsc	status,0,c
  3960  001044  D019               	goto	l609
  3961  001046                     l1800:
  3962  001046  90D8               	bcf	status,0,c
  3963  001048  3610               	rlcf	___ftadd@f1,f,c
  3964  00104A  3611               	rlcf	___ftadd@f1+1,f,c
  3965  00104C  3612               	rlcf	___ftadd@f1+2,f,c
  3966  00104E  061B               	decf	___ftadd@exp1,f,c
  3967  001050  501A               	movf	___ftadd@exp2,w,c
  3968  001052  181B               	xorwf	___ftadd@exp1,w,c
  3969  001054  B4D8               	btfsc	status,2,c
  3970  001056  D00D               	goto	l1808
  3971  001058  0619               	decf	___ftadd@sign,f,c
  3972  00105A  C019  F016         	movff	___ftadd@sign,??___ftadd
  3973  00105E  0E07               	movlw	7
  3974  001060  1616               	andwf	??___ftadd,f,c
  3975  001062  B4D8               	btfsc	status,2,c
  3976  001064  D006               	goto	l1808
  3977  001066  D7EF               	goto	l1800
  3978  001068                     l1806:
  3979  001068  90D8               	bcf	status,0,c
  3980  00106A  3215               	rrcf	___ftadd@f2+2,f,c
  3981  00106C  3214               	rrcf	___ftadd@f2+1,f,c
  3982  00106E  3213               	rrcf	___ftadd@f2,f,c
  3983  001070  2A1A               	incf	___ftadd@exp2,f,c
  3984  001072                     l1808:
  3985  001072  501A               	movf	___ftadd@exp2,w,c
  3986  001074  621B               	cpfseq	___ftadd@exp1,c
  3987  001076  D7F8               	goto	l1806
  3988  001078                     l609:
  3989  001078  AE19               	btfss	___ftadd@sign,7,c
  3990  00107A  D00C               	goto	l618
  3991  00107C  0EFF               	movlw	255
  3992  00107E  1A10               	xorwf	___ftadd@f1,f,c
  3993  001080  0EFF               	movlw	255
  3994  001082  1A11               	xorwf	___ftadd@f1+1,f,c
  3995  001084  0EFF               	movlw	255
  3996  001086  1A12               	xorwf	___ftadd@f1+2,f,c
  3997  001088  0E01               	movlw	1
  3998  00108A  2610               	addwf	___ftadd@f1,f,c
  3999  00108C  0E00               	movlw	0
  4000  00108E  2211               	addwfc	___ftadd@f1+1,f,c
  4001  001090  0E00               	movlw	0
  4002  001092  2212               	addwfc	___ftadd@f1+2,f,c
  4003  001094                     l618:
  4004  001094  AC19               	btfss	___ftadd@sign,6,c
  4005  001096  D00C               	goto	l1814
  4006  001098  0EFF               	movlw	255
  4007  00109A  1A13               	xorwf	___ftadd@f2,f,c
  4008  00109C  0EFF               	movlw	255
  4009  00109E  1A14               	xorwf	___ftadd@f2+1,f,c
  4010  0010A0  0EFF               	movlw	255
  4011  0010A2  1A15               	xorwf	___ftadd@f2+2,f,c
  4012  0010A4  0E01               	movlw	1
  4013  0010A6  2613               	addwf	___ftadd@f2,f,c
  4014  0010A8  0E00               	movlw	0
  4015  0010AA  2214               	addwfc	___ftadd@f2+1,f,c
  4016  0010AC  0E00               	movlw	0
  4017  0010AE  2215               	addwfc	___ftadd@f2+2,f,c
  4018  0010B0                     l1814:
  4019  0010B0  0E00               	movlw	0
  4020  0010B2  6E19               	movwf	___ftadd@sign,c
  4021  0010B4  5010               	movf	___ftadd@f1,w,c
  4022  0010B6  2613               	addwf	___ftadd@f2,f,c
  4023  0010B8  5011               	movf	___ftadd@f1+1,w,c
  4024  0010BA  2214               	addwfc	___ftadd@f2+1,f,c
  4025  0010BC  5012               	movf	___ftadd@f1+2,w,c
  4026  0010BE  2215               	addwfc	___ftadd@f2+2,f,c
  4027  0010C0  AE15               	btfss	___ftadd@f2+2,7,c
  4028  0010C2  D00E               	goto	l1824
  4029  0010C4  0EFF               	movlw	255
  4030  0010C6  1A13               	xorwf	___ftadd@f2,f,c
  4031  0010C8  0EFF               	movlw	255
  4032  0010CA  1A14               	xorwf	___ftadd@f2+1,f,c
  4033  0010CC  0EFF               	movlw	255
  4034  0010CE  1A15               	xorwf	___ftadd@f2+2,f,c
  4035  0010D0  0E01               	movlw	1
  4036  0010D2  2613               	addwf	___ftadd@f2,f,c
  4037  0010D4  0E00               	movlw	0
  4038  0010D6  2214               	addwfc	___ftadd@f2+1,f,c
  4039  0010D8  0E00               	movlw	0
  4040  0010DA  2215               	addwfc	___ftadd@f2+2,f,c
  4041  0010DC  0E01               	movlw	1
  4042  0010DE  6E19               	movwf	___ftadd@sign,c
  4043  0010E0                     l1824:
  4044  0010E0  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  4045  0010E4  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4046  0010E8  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4047  0010EC  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  4048  0010F0  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  4049  0010F4  EC66  F00A         	call	___ftpack	;wreg free
  4050  0010F8  C001  F010         	movff	?___ftpack,?___ftadd
  4051  0010FC  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  4052  001100  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  4053  001104                     l595:
  4054  001104  0012               	return	
  4055  001106                     __end_of___ftadd:
  4056                           	opt stack 0
  4057                           tblptru	equ	0xFF8
  4058                           tblptrh	equ	0xFF7
  4059                           tblptrl	equ	0xFF6
  4060                           tablat	equ	0xFF5
  4061                           prodl	equ	0xFF3
  4062                           postinc0	equ	0xFEE
  4063                           wreg	equ	0xFE8
  4064                           postinc1	equ	0xFE6
  4065                           postdec1	equ	0xFE5
  4066                           fsr1l	equ	0xFE1
  4067                           indf2	equ	0xFDF
  4068                           postinc2	equ	0xFDE
  4069                           postdec2	equ	0xFDD
  4070                           fsr2h	equ	0xFDA
  4071                           fsr2l	equ	0xFD9
  4072                           status	equ	0xFD8
  4073                           
  4074 ;; *************** function ___awtoft *****************
  4075 ;; Defined at:
  4076 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  c               2    8[COMRAM] int 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  sign            1   11[COMRAM] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  3    8[COMRAM] float 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, prodl, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4090 ;;      Params:         3       0       0       0       0       0       0       0       0
  4091 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4093 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4094 ;;Total ram usage:        4 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    1
  4097 ;; This function calls:
  4098 ;;		___ftpack
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text23
  4105  00177E                     __ptext23:
  4106                           	opt stack 0
  4107  00177E                     ___awtoft:
  4108                           	opt stack 29
  4109                           
  4110                           ;incstack = 0
  4111  00177E  0E00               	movlw	0
  4112  001780  6E0C               	movwf	___awtoft@sign,c
  4113  001782  500A               	movf	___awtoft@c+1,w,c
  4114  001784  0A80               	xorlw	128
  4115  001786  6EF3               	movwf	prodl,c
  4116  001788  0E80               	movlw	128
  4117  00178A  5CF3               	subwf	prodl,w,c
  4118  00178C  0E00               	movlw	0
  4119  00178E  B4D8               	btfsc	status,2,c
  4120  001790  5C09               	subwf	___awtoft@c,w,c
  4121  001792  B0D8               	btfsc	status,0,c
  4122  001794  D006               	goto	l1930
  4123  001796  6C09               	negf	___awtoft@c,c
  4124  001798  1E0A               	comf	___awtoft@c+1,f,c
  4125  00179A  B0D8               	btfsc	status,0,c
  4126  00179C  2A0A               	incf	___awtoft@c+1,f,c
  4127  00179E  0E01               	movlw	1
  4128  0017A0  6E0C               	movwf	___awtoft@sign,c
  4129  0017A2                     l1930:
  4130  0017A2  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4131  0017A6  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4132  0017AA  6A03               	clrf	___ftpack@arg+2,c
  4133  0017AC  0E8E               	movlw	142
  4134  0017AE  6E04               	movwf	___ftpack@exp,c
  4135  0017B0  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4136  0017B4  EC66  F00A         	call	___ftpack	;wreg free
  4137  0017B8  C001  F009         	movff	?___ftpack,?___awtoft
  4138  0017BC  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4139  0017C0  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4140  0017C4  0012               	return	
  4141  0017C6                     __end_of___awtoft:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           prodl	equ	0xFF3
  4148                           postinc0	equ	0xFEE
  4149                           wreg	equ	0xFE8
  4150                           postinc1	equ	0xFE6
  4151                           postdec1	equ	0xFE5
  4152                           fsr1l	equ	0xFE1
  4153                           indf2	equ	0xFDF
  4154                           postinc2	equ	0xFDE
  4155                           postdec2	equ	0xFDD
  4156                           fsr2h	equ	0xFDA
  4157                           fsr2l	equ	0xFD9
  4158                           status	equ	0xFD8
  4159                           
  4160 ;; *************** function ___ftpack *****************
  4161 ;; Defined at:
  4162 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  arg             3    0[COMRAM] unsigned um
  4165 ;;  exp             1    3[COMRAM] unsigned char 
  4166 ;;  sign            1    4[COMRAM] unsigned char 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  3    0[COMRAM] float 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4178 ;;      Params:         5       0       0       0       0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4180 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4181 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4182 ;;Total ram usage:        8 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		___awtoft
  4188 ;;		___ftadd
  4189 ;;		___ftdiv
  4190 ;;		___ftmul
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text24
  4195  0014CC                     __ptext24:
  4196                           	opt stack 0
  4197  0014CC                     ___ftpack:
  4198                           	opt stack 29
  4199                           
  4200                           ;incstack = 0
  4201  0014CC  5004               	movf	___ftpack@exp,w,c
  4202  0014CE  B4D8               	btfsc	status,2,c
  4203  0014D0  D005               	goto	l1564
  4204  0014D2  5001               	movf	___ftpack@arg,w,c
  4205  0014D4  1002               	iorwf	___ftpack@arg+1,w,c
  4206  0014D6  1003               	iorwf	___ftpack@arg+2,w,c
  4207  0014D8  A4D8               	btfss	status,2,c
  4208  0014DA  D00C               	goto	l1570
  4209  0014DC                     l1564:
  4210  0014DC  0E00               	movlw	0
  4211  0014DE  6E01               	movwf	?___ftpack,c
  4212  0014E0  0E00               	movlw	0
  4213  0014E2  6E02               	movwf	?___ftpack+1,c
  4214  0014E4  0E00               	movlw	0
  4215  0014E6  6E03               	movwf	?___ftpack+2,c
  4216  0014E8  D044               	goto	l557
  4217  0014EA                     l1568:
  4218  0014EA  2A04               	incf	___ftpack@exp,f,c
  4219  0014EC  90D8               	bcf	status,0,c
  4220  0014EE  3203               	rrcf	___ftpack@arg+2,f,c
  4221  0014F0  3202               	rrcf	___ftpack@arg+1,f,c
  4222  0014F2  3201               	rrcf	___ftpack@arg,f,c
  4223  0014F4                     l1570:
  4224  0014F4  0E00               	movlw	0
  4225  0014F6  1401               	andwf	___ftpack@arg,w,c
  4226  0014F8  6E06               	movwf	??___ftpack& (0+255),c
  4227  0014FA  0E00               	movlw	0
  4228  0014FC  1402               	andwf	___ftpack@arg+1,w,c
  4229  0014FE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4230  001500  0EFE               	movlw	254
  4231  001502  1403               	andwf	___ftpack@arg+2,w,c
  4232  001504  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4233  001506  5006               	movf	??___ftpack,w,c
  4234  001508  1007               	iorwf	??___ftpack+1,w,c
  4235  00150A  1008               	iorwf	??___ftpack+2,w,c
  4236  00150C  B4D8               	btfsc	status,2,c
  4237  00150E  D00C               	goto	l1576
  4238  001510  D7EC               	goto	l1568
  4239  001512                     l1572:
  4240  001512  2A04               	incf	___ftpack@exp,f,c
  4241  001514  0E01               	movlw	1
  4242  001516  2601               	addwf	___ftpack@arg,f,c
  4243  001518  0E00               	movlw	0
  4244  00151A  2202               	addwfc	___ftpack@arg+1,f,c
  4245  00151C  0E00               	movlw	0
  4246  00151E  2203               	addwfc	___ftpack@arg+2,f,c
  4247  001520  90D8               	bcf	status,0,c
  4248  001522  3203               	rrcf	___ftpack@arg+2,f,c
  4249  001524  3202               	rrcf	___ftpack@arg+1,f,c
  4250  001526  3201               	rrcf	___ftpack@arg,f,c
  4251  001528                     l1576:
  4252  001528  0E00               	movlw	0
  4253  00152A  1401               	andwf	___ftpack@arg,w,c
  4254  00152C  6E06               	movwf	??___ftpack& (0+255),c
  4255  00152E  0E00               	movlw	0
  4256  001530  1402               	andwf	___ftpack@arg+1,w,c
  4257  001532  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4258  001534  0EFF               	movlw	255
  4259  001536  1403               	andwf	___ftpack@arg+2,w,c
  4260  001538  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4261  00153A  5006               	movf	??___ftpack,w,c
  4262  00153C  1007               	iorwf	??___ftpack+1,w,c
  4263  00153E  1008               	iorwf	??___ftpack+2,w,c
  4264  001540  B4D8               	btfsc	status,2,c
  4265  001542  D006               	goto	l1580
  4266  001544  D7E6               	goto	l1572
  4267  001546                     l1578:
  4268  001546  0604               	decf	___ftpack@exp,f,c
  4269  001548  90D8               	bcf	status,0,c
  4270  00154A  3601               	rlcf	___ftpack@arg,f,c
  4271  00154C  3602               	rlcf	___ftpack@arg+1,f,c
  4272  00154E  3603               	rlcf	___ftpack@arg+2,f,c
  4273  001550                     l1580:
  4274  001550  AE02               	btfss	___ftpack@arg+1,7,c
  4275  001552  D7F9               	goto	l1578
  4276  001554  A004               	btfss	___ftpack@exp,0,c
  4277  001556  9E02               	bcf	___ftpack@arg+1,7,c
  4278  001558  90D8               	bcf	status,0,c
  4279  00155A  3204               	rrcf	___ftpack@exp,f,c
  4280  00155C  5004               	movf	___ftpack@exp,w,c
  4281  00155E  1203               	iorwf	___ftpack@arg+2,f,c
  4282  001560  5005               	movf	___ftpack@sign,w,c
  4283  001562  A4D8               	btfss	status,2,c
  4284  001564  8E03               	bsf	___ftpack@arg+2,7,c
  4285  001566  C001  F001         	movff	___ftpack@arg,?___ftpack
  4286  00156A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4287  00156E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4288  001572                     l557:
  4289  001572  0012               	return	
  4290  001574                     __end_of___ftpack:
  4291                           	opt stack 0
  4292                           tblptru	equ	0xFF8
  4293                           tblptrh	equ	0xFF7
  4294                           tblptrl	equ	0xFF6
  4295                           tablat	equ	0xFF5
  4296                           prodl	equ	0xFF3
  4297                           postinc0	equ	0xFEE
  4298                           wreg	equ	0xFE8
  4299                           postinc1	equ	0xFE6
  4300                           postdec1	equ	0xFE5
  4301                           fsr1l	equ	0xFE1
  4302                           indf2	equ	0xFDF
  4303                           postinc2	equ	0xFDE
  4304                           postdec2	equ	0xFDD
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           tblptru	equ	0xFF8
  4309                           tblptrh	equ	0xFF7
  4310                           tblptrl	equ	0xFF6
  4311                           tablat	equ	0xFF5
  4312                           prodl	equ	0xFF3
  4313                           postinc0	equ	0xFEE
  4314                           wreg	equ	0xFE8
  4315                           postinc1	equ	0xFE6
  4316                           postdec1	equ	0xFE5
  4317                           fsr1l	equ	0xFE1
  4318                           indf2	equ	0xFDF
  4319                           postinc2	equ	0xFDE
  4320                           postdec2	equ	0xFDD
  4321                           fsr2h	equ	0xFDA
  4322                           fsr2l	equ	0xFD9
  4323                           status	equ	0xFD8
  4324                           
  4325                           	psect	rparam
  4326  0000                     tblptru	equ	0xFF8
  4327                           tblptrh	equ	0xFF7
  4328                           tblptrl	equ	0xFF6
  4329                           tablat	equ	0xFF5
  4330                           prodl	equ	0xFF3
  4331                           postinc0	equ	0xFEE
  4332                           wreg	equ	0xFE8
  4333                           postinc1	equ	0xFE6
  4334                           postdec1	equ	0xFE5
  4335                           fsr1l	equ	0xFE1
  4336                           indf2	equ	0xFDF
  4337                           postinc2	equ	0xFDE
  4338                           postdec2	equ	0xFDD
  4339                           fsr2h	equ	0xFDA
  4340                           fsr2l	equ	0xFD9
  4341                           status	equ	0xFD8


Data Sizes:
    Strings     36
    Constant    0
    Data        77
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      81
    BANK0           160      0      75
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_putstr@str	PTR unsigned char  size(2) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->___ftdiv
    _lcd_putstr->_lcd_putchar
    _lcd_init->_lcd_config
    _lcd_clear->_lcd_config
    _lcd_home->_lcd_config
    _lcd_goto->_lcd_config
    _lcd_config->_delay_ms
    _lcd_config->_lcd_4bit_write
    _lcd_bcd->___fttol
    _lcd_putchar->_delay_ms
    _lcd_putchar->_lcd_4bit_write
    _lcd_e_clock->_delay_us
    _bcd->___fttol
    ___ftneg->___awtoft
    ___ftmul->___ftpack
    ___ftge->___awtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftneg
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   26780
                                             38 COMRAM     4     4      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            _adc_run
                                _bcd
                           _delay_ms
                            _lcd_bcd
                          _lcd_clear
                           _lcd_goto
                           _lcd_home
                           _lcd_init
                        _lcd_putchar
                         _lcd_putstr
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     0      2    1094
                                              4 COMRAM     2     0      2
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3126
                           _delay_ms
                           _delay_us
                          _lcd_clear
                         _lcd_config
                        _lcd_e_clock
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0    1518
                           _delay_ms
                         _lcd_config
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             0     0      0    1518
                           _delay_ms
                         _lcd_config
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             1     1      0     859
                                              4 COMRAM     1     1      0
                         _lcd_config
 ---------------------------------------------------------------------------------
 (2) _lcd_config                                           1     1      0     837
                                              3 COMRAM     1     1      0
                           _delay_ms
                           _delay_us
                     _lcd_4bit_write
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    3372
                                             15 COMRAM    17    15      2
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          1     1      0     837
                                              3 COMRAM     1     1      0
                           _delay_ms
                           _delay_us
                     _lcd_4bit_write
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_write                                       2     2      0      89
                                              1 COMRAM     2     2      0
                        _lcd_e_clock
 ---------------------------------------------------------------------------------
 (4) _lcd_e_clock                                          0     0      0      45
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             3     1      2     681
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _bcd                                                 19    17      2    2678
                                             15 COMRAM    19    17      2
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1007
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1010
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _adc_run                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     464
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     151
                                             12 COMRAM     3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2303
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     454
                                             12 COMRAM     9     3      6
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2469
                                             23 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    3109
                                             15 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            _adc_run (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2147
                                              8 COMRAM     4     1      3
                           ___ftpack
                            _adc_run (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1685
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
     _adc_run (ARG)
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       _adc_run (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _adc_run (ARG)
     ___ftpack (ARG)
     _adc_run (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge
     ___awtoft (ARG)
       ___ftpack
       _adc_run (ARG)
   ___ftmul
     ___ftpack
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       _adc_run (ARG)
   ___fttol
   _adc_run
   _bcd
     ___fttol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _delay_ms
   _lcd_bcd
     ___fttol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     _lcd_putchar (ARG)
       _delay_ms
       _delay_us
       _lcd_4bit_write
         _lcd_e_clock
           _delay_us
   _lcd_clear
     _delay_ms
     _lcd_config
       _delay_ms
       _delay_us
       _lcd_4bit_write
         _lcd_e_clock
           _delay_us
   _lcd_goto
     _lcd_config
       _delay_ms
       _delay_us
       _lcd_4bit_write
         _lcd_e_clock
           _delay_us
   _lcd_home
     _delay_ms
     _lcd_config
       _delay_ms
       _delay_us
       _lcd_4bit_write
         _lcd_e_clock
           _delay_us
   _lcd_init
     _delay_ms
     _delay_us
     _lcd_clear
       _delay_ms
       _lcd_config
         _delay_ms
         _delay_us
         _lcd_4bit_write
           _lcd_e_clock
             _delay_us
     _lcd_config
       _delay_ms
       _delay_us
       _lcd_4bit_write
         _lcd_e_clock
           _delay_us
     _lcd_e_clock
       _delay_us
   _lcd_putchar
     _delay_ms
     _delay_us
     _lcd_4bit_write
       _lcd_e_clock
         _delay_us
   _lcd_putstr
     _lcd_putchar
       _delay_ms
       _delay_us
       _lcd_4bit_write
         _lcd_e_clock
           _delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      4B       5       46.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      51       1       85.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      20        0.0%
DATA                 0      0      9C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Aug 06 11:02:16 2014

                      _i 0046                        _j 0048             ?_lcd_putchar 0001  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           ___ftadd@exp1 001B             ___ftadd@exp2 001A             ___ftadd@sign 0019  
                    l220 0E9E                      l133 0A00                      l125 09BE  
                    l117 08C0                      l230 0ED4                      l222 0EA2  
                    l206 18A6                      l223 0EA8                      l224 0EB2  
                    l225 0EB8                      l226 0EBC                      l227 0EC2  
                    l228 0ECA                      l229 0ED0                      l239 18E6  
                    _CM0 007DA0                      _CM1 007DA1                      _CM2 007DA2  
                    l609 1078                      l641 1320                      l618 1094  
                    l626 13F6                      l635 1602                      l651 1878  
                    l557 1572                      l629 13C6                      l661 14CA  
                    l594 0FA0                      l595 1104                      l763 16DA  
                    l773 17FE                      l598 0FCC             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _bcd 0D64                      wreg 000FE8  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 0021             ___ftdiv@sign 0026  
           __CFG_WDT$OFF 000000                     ?_bcd 0010                     l2120 0A64  
                   l2112 0A38                     l2130 0AAC                     l2114 0A3C  
                   l2124 0A7E                     l2108 0A1C                     l2150 0B26  
                   l2134 0AC0                     l1600 16A8                     l2136 0AC4  
                   l1602 16B0                     l2170 0D0E                     l2074 0922  
                   l1612 16D0                     l1604 16B4                     l1620 17D4  
                   l1524 1946                     l2164 0CAE                     l2092 09CE  
                   l2084 09BA                     l1622 17DC                     l2174 0D42  
                   l2166 0CBA                     l2158 0BF8                     l1800 1046  
                   l1624 17E0                     l1570 14F4                     l2178 0D56  
                   l2098 09DA                     l1580 1550                     l1572 1512  
                   l1564 14DC                     l1900 12B0                     l1628 17F4  
                   l1732 0E6C                     l1814 10B0                     l1806 1068  
                   l1910 12D8                     l1750 0F52                     l1742 0F3A  
                   l1662 184C                     l1576 1528                     l1568 14EA  
                   l1824 10E0                     l1808 1072                     l1840 1362  
                   l1904 12C0                     l1736 0EDE                     l1578 1546  
                   l1930 17A2                     l1834 133C                     l1914 12E8  
                   l1746 0F48                     l1738 0F2C                     l1658 1838  
                   l1772 0FDA                     l1860 13A0                     l1766 0FAE  
                   l1942 15D4                     l1880 1258                     l1794 102C  
                   l1938 15A4                     l1962 1412                     l1698 1206  
                   l1796 1036                     l1788 100A                     l1948 1600  
                   l1980 146C                     l1798 103E                     l1886 127E  
                   l1990 1494                     l1992 14A0                     l1984 147C  
                   l1994 14A4                     l1998 14BA                     _ADFM 007E07  
                   _ADON 007E10                     _CHS0 007E12                     _CHS1 007E13  
                   _CHS2 007E14                     _CHS3 007E15                     STR_1 080A  
                   STR_2 081C                     STR_3 0801                     STR_4 0813  
                   u1301 0F7E                     u1221 0D70                     u1501 1332  
                   u1181 1112                     _LATB 000F8A                     u1521 134C  
                   u1530 1354                     u1291 0F6A                     u1710 1482  
                   u1551 124E                     u1571 1268                     u1580 1270  
                   u1661 1408                     u1680 1430                     u1685 1428  
                   u1977 1948                     u1987 1894                     _main 0826  
           ___ftpack@arg 0001             ___ftpack@exp 0004                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     prodl 000FF3  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___ftmul@cntr 0016             ___ftmul@sign 0017             ___fttol@exp1 000F  
                  ??_bcd 0012             ___fttol@lval 000B            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    _ADCS0 007E00                    _ADCS1 007E01  
                  ?_main 0001          __end_of___ftadd 1106          __end_of___ftdiv 13F8  
        __end_of___ftneg 1886          __end_of___ftmul 1322          __end_of___fttol 14CC  
                  _PCFG0 007E08                    _PCFG1 007E09                    _PCFG2 007E0A  
                  _PCFG3 007E0B          __end_of___lwdiv 16E4          __end_of_adc_run 1902  
        __end_of___lwmod 1808                    _VCFG0 007E0C                    _VCFG1 007E0D  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
          __CFG_USBDIV$2 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000          __end_of_lcd_bcd 123E  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000            ___awtoft@sign 000C            ___ftpack@sign 0005  
                  _value 003F                    tablat 000FF5                    status 000FD8  
        __initialization 16E4             __end_of_main 0D64                   ??_main 0027  
          ___fttol@sign1 000A            __activetblptr 000002             bcd@ui_number 0010  
__size_of_lcd_4bit_write 002E                   _ADRESH 000FC4                   _ADRESL 000FC3  
       __end_of___awtoft 17C6         __end_of___ftpack 1574                   _GODONE 007E11  
         __CFG_VREGEN$ON 000000         __end_of_delay_ms 18A8         __end_of_delay_us 1954  
   __size_of_lcd_e_clock 0018          delay_ms@ui_data 0001           __CFG_XINST$OFF 000000  
       __end_of_lcd_home 1942         __end_of_lcd_init 1692         __end_of_lcd_goto 1960  
                 ___ftge 1574                ??___ftadd 0016           __CFG_STVREN$ON 000000  
              ??___ftdiv 001E                ??___ftneg 0010                ??___ftmul 000F  
              ??___fttol 0005                ??___lwdiv 0005                ??_adc_run 0003  
              ??___lwmod 0005        lcd_config@command 0004                   clear_0 16EA  
              ??_lcd_bcd 0012     __size_of_lcd_putchar 001E    ___ftmul@f3_as_product 0013  
           __pdataCOMRAM 0050             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8            lcd_putstr@str 0005  
     lcd_4bit_write@data 0003               __accesstop 0060  __end_of__initialization 1728  
        __CFG_PBADEN$OFF 000000               ___ftadd@f1 0010               ___ftadd@f2 0013  
             ___ftge@ff1 000D               ___ftge@ff2 0010               ___ftdiv@f1 0018  
             ___ftdiv@f2 001B               ___ftdiv@f3 0022               ___ftneg@f1 000D  
        delay_us@uc_data 0001               ___awtoft@c 0009               ___ftmul@f1 0009  
             ___ftmul@f2 000C               ___fttol@f1 0001           __pcstackCOMRAM 0001  
           __pidataBANK0 1732            bcd@ui_decimal 0018       __size_of_lcd_clear 0014  
                ?___ftge 000D                ?___awtoft 0009                ?___ftpack 0001  
         _lcd_4bit_write 1808               _lcd_config 18A8                ?_delay_ms 0001  
              ?_delay_us 0001               _lcd_putstr 1836                ?_lcd_home 0001  
              ?_lcd_init 0001                ?_lcd_goto 0001               _firstLine1 0060  
             _firstLine2 0079                  __Hparam 0000                  __Lparam 0000  
      __end_of_lcd_clear 192E          __size_of___ftge 0090                  ___ftadd 0F5A  
                ___ftdiv 1322                  ___ftneg 1860                  ___ftmul 123E  
                ___fttol 13F8                  ___lwdiv 1692                  _adc_run 18E4  
                ___lwmod 17C6             __psmallconst 0800                  __pcinit 16E4  
             ??___awtoft 000C               ??___ftpack 0006                  __ramtop 0800  
                __ptext0 0826                  __ptext1 1836                  __ptext2 1604  
                __ptext3 191A                  __ptext4 192E                  __ptext5 1954  
                __ptext6 18A8                  __ptext7 1106                  __ptext8 18C6  
                __ptext9 1808                  _lcd_bcd 1106   __end_of_lcd_4bit_write 1836  
                _counter 0044             __size_of_bcd 01F6                  _maximum 004A  
             ??_delay_ms 0003               ??_delay_us 0001           _incrementValue 0050  
             ??_lcd_home 0005               ??_lcd_init 0005               ??_lcd_goto 0005  
   end_of_initialization 1728               _secondLine 0092        lcd_bcd@ui_decimal 0016  
          __Lmediumconst 0000          lcd_goto@address 0005                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE                _PORTBbits 000F81          ?_lcd_4bit_write 0001  
            ?_lcd_config 0001              ?_lcd_putstr 0005            ??_lcd_e_clock 0002  
            ___ftdiv@exp 0025              ___ftmul@exp 0012            ??_lcd_putchar 0004  
         __end_of___ftge 1604            __pidataCOMRAM 1960      start_initialization 16E4  
            bcd@uc_digit 0022              __end_of_bcd 0F5A      __end_of_lcd_e_clock 191A  
    __size_of_lcd_config 001E                 ??___ftge 0013              __pdataBANK0 0060  
    __size_of_lcd_putstr 002A         __CFG_LPT1OSC$OFF 000000        __size_of___awtoft 0048  
      __size_of___ftpack 00A8      __end_of_lcd_putchar 18E4              __pbssCOMRAM 002B  
    __end_of__stringdata 0825        __size_of_delay_ms 0022        __size_of_delay_us 0012  
      __size_of_lcd_home 0014        __size_of_lcd_init 008E        __size_of_lcd_goto 000C  
       ___lwdiv@dividend 0001                 ?___ftadd 0010                 ?___ftdiv 0018  
               ?___ftneg 000D              _centerValue 0042                 ?___ftmul 0009  
               ?___fttol 0001                 ?___lwdiv 0001                 ?_adc_run 0001  
               ?___lwmod 0001                _lcd_clear 191A                 ?_lcd_bcd 0010  
            __smallconst 0800         ___lwdiv@quotient 0005              _lcd_e_clock 1902  
               _LATAbits 000F89                 _LATBbits 000F8A                 _LATCbits 000F8B  
              _selection 004C         lcd_bcd@ui_number 0010         __CFG_WDTPS$32768 000000  
       ??_lcd_4bit_write 0002              _lcd_putchar 18C6               ?_lcd_clear 0001  
            __stringdata 0801             ??_lcd_config 0004             ??_lcd_putstr 0007  
              copy_data0 1704                 __Hrparam 0000                 bcd@F4844 002B  
               __Lrparam 0000       __end_of_lcd_config 18C6         __size_of___ftadd 01AC  
       __size_of___ftdiv 00D6         __size_of___ftneg 0026         __size_of___ftmul 00E4  
       __size_of___fttol 00D4         __size_of___lwdiv 0052         __size_of_adc_run 001E  
     __end_of_lcd_putstr 1860         __size_of___lwmod 0042                 ___awtoft 177E  
               ___ftpack 14CC                 bcd@value 0016         __size_of_lcd_bcd 0138  
               _delay_ms 1886                 _delay_us 1942          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 1902                 __ptext11 1942  
               __ptext20 1574                 __ptext12 1886                 __ptext21 1322  
               __ptext13 0D64                 __ptext22 0F5A                 __ptext14 17C6  
               __ptext23 177E                 __ptext15 1692                 __ptext24 14CC  
               __ptext16 18E4                 __ptext17 13F8                 __ptext18 1860  
               __ptext19 123E                 _lcd_home 192E                 _lcd_init 1604  
               _lcd_goto 1954            __size_of_main 053E          lcd_bcd@uc_digit 0020  
               _valueans 004D              ??_lcd_clear 0005    __CFG_CPUDIV$OSC1_PLL2 000000  
        lcd_putchar@data 0004         ___lwmod@dividend 0001             lcd_bcd@F4836 0035  
        ___lwmod@divisor 0003          ___lwmod@counter 0005       __CFG_FOSC$HSPLL_HS 000000  
           ?_lcd_e_clock 0001  
